<!DOCTYPE html>
<html dir="ltr" class="" lang="en"><head prefix="og: http://ogp.me/ns#">
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
  <meta charset="utf-8">

  <meta http-equiv="X-UA-Compatible" content="IE=Edge">
  <script>(function(d) { d.className = d.className.replace(/\bno-js/, ''); })(document.documentElement);</script>
  <title>Drawing graphics - Learn web development | MDN</title>

  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="robots" content="index, follow">

  
<link rel="preload" href="https://developer.mozilla.org/static/fonts/locales/ZillaSlab-Regular.subset.bbc33fb47cf6.woff2" as="font" type="font/woff2" crossorigin="">
    <link rel="home" href="https://developer.mozilla.org/en-US/">
    <link rel="license" href="#license">
  

  
    
    

    <link href="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/mdn.css" rel="stylesheet" type="text/css">

    
  
    <link href="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/wiki.css" rel="stylesheet" type="text/css">


    

  <link href="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/locale-en-US.css" rel="stylesheet" type="text/css">

  
    <script>
    // Mozilla DNT Helper
    /* This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at http://mozilla.org/MPL/2.0/. */ if(typeof Mozilla==='undefined'){var Mozilla={}}Mozilla.dntEnabled=function(dnt,ua){'use strict';var dntStatus=dnt||navigator.doNotTrack||window.doNotTrack||navigator.msDoNotTrack;var userAgent=ua||navigator.userAgent;var anomalousWinVersions=['Windows NT 6.1','Windows NT 6.2','Windows NT 6.3'];var fxMatch=userAgent.match(/Firefox\/(\d+)/);var ieRegEx=/MSIE|Trident/i;var isIE=ieRegEx.test(userAgent);var platform=userAgent.match(/Windows.+?(?=;)/g);if(isIE&&typeof Array.prototype.indexOf!=='function'){return false}else if(fxMatch&&parseInt(fxMatch[1],10)<32){dntStatus='Unspecified'}else if(isIE&&platform&&anomalousWinVersions.indexOf(platform.toString())!==-1){dntStatus='Unspecified'}else{dntStatus={'0':'Disabled','1':'Enabled'}[dntStatus]||'Unspecified'}return dntStatus==='Enabled'?true:false};
    // only load GA if DNT is not enabled
    if (Mozilla && !Mozilla.dntEnabled()) {
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-36116321-5', 'mozilla.org');
        ga('set', 'anonymizeIp', true);

        

        // dimension9 == "Section editing"
        
            // dimension12 == 'Page Revision'
            ga('set', 'dimension12', '1539463');
            // dimension17 == 'English Slug'
            ga('set', 'dimension17', 'Learn/JavaScript/Client-side_web_APIs/Drawing_graphics');

        (function() {
            // http://cfsimplicity.com/61/removing-analytics-clutter-from-campaign-urls
            var win = window;
            var removeUtms = function(){
                var location = win.location;
                if (location.href.indexOf('utm') != -1 && win.history.replaceState) {
                    win.history.replaceState({}, '', location.pathname);
                }
            };

            ga('send', 'pageview', {'hitCallback': removeUtms});
        })();
    }
</script>
  

  
    <script>
    // util for setting performance marks and mesaures
    var mdn=window.mdn||{};mdn.perf={getDuration:function(e){"use strict";if(void 0!==performance.getEntriesByName)return performance.getEntriesByName(e)[0].duration;console.error("performance.getEntriesByName is not supported by your user-agent")},setMark:function(e){"use strict";if(void 0!==performance.mark)try{performance.mark(e)}catch(e){console.error("Error while setting performance mark: ",e)}else console.error("performance.mark is not supported by your user-agent")},setMeasure:function(e){"use strict";void 0!==performance.measure?performance.measure(e.measureName,e.startMark,e.endMark):console.error("performance.measure is not supported by your user-agent")}};
    /* util specifically for postMessages sent from the
       `head` of the interactive examples iframe */
    function handlePerfMarks(e){e.measureName?(window.mdn.perf.setMark(e.markName),window.mdn.perf.setMeasure({measureName:e.measureName,startMark:e.startMark,endMark:e.endMark}),ga&&ga.create&&ga("send",{hitType:"timing",timingCategory:"RUM - Interactive Examples",timingVar:e.measureName,timingValue:window.mdn.perf.getDuration(e.measureName)||0})):window.mdn.perf.setMark(e.markName)}function perfMsgHandler(e){"use strict";var a=window.mdn.interactiveEditor.editorUrl||"https://interactive-examples.mdn.mozilla.net",r=e.data;if(e.origin!==a)return!1;r.markName&&-1<r.markName.indexOf("interactive-editor-")&&handlePerfMarks(r)}window.addEventListener("message",perfMsgHandler,!1);
</script>

    <!-- common social tags -->
    
    <meta property="og:type" content="website">
    <meta property="og:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
    <meta property="og:site_name" content="MDN Web Docs">
    <meta name="twitter:card" content="summary">
    <meta name="twitter:image" content="https://developer.mozilla.org/static/img/opengraph-logo.72382e605ce3.png">
    <meta name="twitter:site" content="@MozDevNet">
    <meta name="twitter:creator" content="@MozDevNet">
    <link rel="search" type="application/opensearchdescription+xml" href="https://developer.mozilla.org/en-US/search/xml" title="MDN Web Docs">
    
  
  <!-- third-generation iPad with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="144x144" href="https://developer.mozilla.org/static/img/favicon144.e7e21ca263ca.png">
  <!-- iPhone with high-resolution Retina display: -->
  <link rel="apple-touch-icon-precomposed" sizes="114x114" href="https://developer.mozilla.org/static/img/favicon114.d526f38b09c5.png">
  <!-- first- and second-generation iPad: -->
  <link rel="apple-touch-icon-precomposed" sizes="72x72" href="https://developer.mozilla.org/static/img/favicon72.cc65d1d762a0.png">
  <!-- non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
  <link rel="apple-touch-icon-precomposed" href="https://developer.mozilla.org/static/img/favicon57.de33179910ae.png">
  <!-- basic favicon -->
  <link rel="shortcut icon" href="https://developer.mozilla.org/static/img/favicon32.7f3da72dcea1.png">
  <!--[if IE]>
  <meta http-equiv="imagetoolbar" content="no">
  <script type="text/javascript" src="https://developer.mozilla.org/static/build/js/html5shiv.ae1ac46eaf58.js" charset="utf-8"></script>
  <![endif]-->

  
  <link rel="dns-prefetch" href="https://interactive-examples.mdn.mozilla.net/" pr="0.75">
  <link rel="preconnect" href="https://interactive-examples.mdn.mozilla.net/" pr="0.75">

  <link rel="alternate" type="application/json" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics$json">
  <link rel="canonical" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">

  
  <link rel="alternate" hreflang="en" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" title="Drawing graphics">
  
    
      <link rel="alternate" hreflang="fr" href="https://developer.mozilla.org/fr/docs/Apprendre/JavaScript/Client-side_web_APIs/Drawing_graphics" title="Dessiner des éléments graphiques">
    
      <link rel="alternate" hreflang="ja" href="https://developer.mozilla.org/ja/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" title="グラフィックの描画">
    
      <link rel="alternate" hreflang="zh" href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" title="绘图">
    
  

  <!-- document-specific social tags -->
  <meta property="og:title" content="Drawing graphics">
  <meta property="og:url" content="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">
  <meta name="twitter:url" content="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">
  <meta name="twitter:title" content="Drawing graphics">
  
  <meta property="og:description" content="At this point, you should have a useful idea of the basics of graphics programming using Canvas and WebGL and what you can do with these APIs, as well as a good idea of where to go for further information. Have fun!">
  <meta name="description" content="At this point, you should have a useful idea of the basics of graphics programming using Canvas and WebGL and what you can do with these APIs, as well as a good idea of where to go for further information. Have fun!">
  <meta name="twitter:description" content="At this point, you should have a useful idea of the basics of graphics programming using Canvas and WebGL and what you can do with these APIs, as well as a good idea of where to go for further information. Have fun!">
  

<script async="" data-manual="true" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/syntax-prism.js"></script></head>
<body data-slug="Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" contextmenu="edit-history-menu" data-search-url="" class="document">

  <script>
    // make sure global mdn object exists
    var mdn = window.mdn || {};

    (function(win) {
        'use strict';

        (function(){
  var FLAGS = {
    'kumaediting': false,'page_move': false,'section_edit': false,'spam_checks_enabled': true,'spam_submissions_enabled': false,'spam_admin_override': false,'spam_spammer_override': false,'spam_testing_mode': false,'sg_task_completion': false,'contrib_beta': false,'recurring_payment_beta': true
    },
    SWITCHES = {
    'welcome_email': true,'application_ACAO': true,'store_revision_ips': true,'foundation_callout': false,'helpful-survey-2': true,'wiki_spam_training': true,'registration_disabled': false
    },
    SAMPLES = {
    
    };
  window.waffle = {
    "flag_is_active": function waffle_flag(flag_name) {
      
      return !!FLAGS[flag_name];
    },
    "switch_is_active": function waffle_switch(switch_name) {
      
      return !!SWITCHES[switch_name];
    },
    "sample_is_active": function waffle_sample(sample_name) {
      
      return !!SAMPLES[sample_name];
    },
    "FLAGS": FLAGS,
    "SWITCHES": SWITCHES,
    "SAMPLES": SAMPLES
  };
})();

        // This needs to be set before ckeditor.js loads
        window.CKEDITOR_BASEPATH = 'https://developer.mozilla.org/static/js/libs/ckeditor4/build/ckeditor/';

        // Site configuration
        win.mdn.ckeditor = {};
        win.mdn.features = {};
        win.mdn.siteUrl = 'https://developer.mozilla.org';
        win.mdn.wikiSiteUrl = 'https://wiki.developer.mozilla.org';
        win.mdn.staticPath = 'https://developer.mozilla.org/static/';
        win.mdn.wiki = {
            autosuggestTitleUrl: '/en-US/docs/get-documents'
        };
        win.mdn.assets = {
            css: {
                'editor-content': ['https://developer.mozilla.org/static/build/styles/editor-content.c0050f172728.css','https://developer.mozilla.org/static/build/styles/editor-locale-en-US.520ecdcaef8c.css',
                ],

                'wiki-compat-tables': ['https://developer.mozilla.org/static/build/styles/wiki-compat-tables.eef64bf9b6fe.css',]
            },
            js: {
                'syntax-prism': ['https://developer.mozilla.org/static/build/js/syntax-prism.81b5e1aa1f6b.js',],
                'wiki-compat-tables': ['https://developer.mozilla.org/static/build/js/wiki-compat-tables.3a4ab2cc8ca1.js',]
            }
        };

        win.mdn.notifications = [];
        win.mdn.contributions = {
            enabled: true,
            popup: false
        };

        

        // interactive editor config
        win.mdn.interactiveEditor = {
            siteUrl: "https://developer.mozilla.org",
            editorUrl: "https://interactive-examples.mdn.mozilla.net"
        };
        win.mdn.langCookieName = "django_language";

    })(this);
</script>
    
    <ul id="nav-access">
  <li><a href="#content" id="skip-main">Skip to main content</a></li>
  <li><a id="skip-language" href="#language">Select language</a></li>
  <li><a href="#q" id="skip-search">Skip to search</a></li>
</ul>

    <!-- Header -->
    <header id="main-header" class="header-main">
      <a href="https://developer.mozilla.org/en-US/" class="logo">MDN Web Docs</a>
      <div class="nav-toolbox-wrapper">
        <nav id="main-nav" class="nav-main" role="navigation">
    <ul>
        <li class="nav-main-item">
            <a href="https://developer.mozilla.org/en-US/docs/Web">Technologies
                <svg class="icon icon-caret-down" xmlns="http://www.w3.org/2000/svg" width="16" height="28" viewBox="0 0 16 28"><path d="M16 11a.99.99 0 0 1-.297.703l-7 7C8.516 18.89 8.265 19 8 19s-.516-.109-.703-.297l-7-7A.996.996 0 0 1 0 11c0-.547.453-1 1-1h14c.547 0 1 .453 1 1z"></path></svg>
            </a>
            <div class="submenu js-submenu" id="nav-tech-submenu">
                <div class="submenu-column">
                  <ul>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTML">HTML</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/CSS">CSS</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript">JavaScript</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide/Graphics">Graphics</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP">HTTP</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/API">APIs / DOM</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions">Browser Extensions</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/MathML">MathML</a></li>
                  </ul>
                </div>
            </div>
        </li>
        <li class="nav-main-item">
            <a href="https://developer.mozilla.org/en-US/docs/Learn">References &amp; Guides
                <svg class="icon icon-caret-down" xmlns="http://www.w3.org/2000/svg" width="16" height="28" viewBox="0 0 16 28"><path d="M16 11a.99.99 0 0 1-.297.703l-7 7C8.516 18.89 8.265 19 8 19s-.516-.109-.703-.297l-7-7A.996.996 0 0 1 0 11c0-.547.453-1 1-1h14c.547 0 1 .453 1 1z"></path></svg>
            </a>
            <div class="submenu js-submenu" id="nav-learn-submenu">
                <div class="submenu-column">
                  <ul>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Learn">Learn web development</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Tutorials">Tutorials</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Reference">References</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Guide">Developer Guides</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web/Accessibility">Accessibility</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Games">Game development</a></li>
                    <li><a href="https://developer.mozilla.org/en-US/docs/Web">...more docs</a></li>
                  </ul>
                </div>
            </div>
        </li>
        <li class="nav-main-item">
            <a href="https://developer.mozilla.org/en-US/docs/MDN/Feedback">Feedback
                <svg class="icon icon-caret-down" xmlns="http://www.w3.org/2000/svg" width="16" height="28" viewBox="0 0 16 28"><path d="M16 11a.99.99 0 0 1-.297.703l-7 7C8.516 18.89 8.265 19 8 19s-.516-.109-.703-.297l-7-7A.996.996 0 0 1 0 11c0-.547.453-1 1-1h14c.547 0 1 .453 1 1z"></path></svg>
            </a>
            <div class="submenu js-submenu" id="nav-contact-submenu">
              <div class="submenu-column">
                <ul>
                  <li>
                      <a href="https://support.mozilla.org/">Get Firefox help
                          <svg class="icon icon-external-link" xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" aria-hidden="true"><path d="M22 14.5v5c0 2.484-2.016 4.5-4.5 4.5h-13A4.502 4.502 0 0 1 0 19.5v-13C0 4.016 2.016 2 4.5 2h11c.281 0 .5.219.5.5v1c0 .281-.219.5-.5.5h-11A2.507 2.507 0 0 0 2 6.5v13C2 20.875 3.125 22 4.5 22h13c1.375 0 2.5-1.125 2.5-2.5v-5c0-.281.219-.5.5-.5h1c.281 0 .5.219.5.5zM28 1v8c0 .547-.453 1-1 1a.99.99 0 0 1-.703-.297l-2.75-2.75L13.36 17.14c-.094.094-.234.156-.359.156s-.266-.063-.359-.156l-1.781-1.781c-.094-.094-.156-.234-.156-.359s.063-.266.156-.359L21.048 4.454l-2.75-2.75a.996.996 0 0 1-.297-.703c0-.547.453-1 1-1h8c.547 0 1 .453 1 1z"></path></svg>
                      </a>
                  </li>
                  <li>
                      <a href="https://stackoverflow.com/">Get web development help
                          <svg class="icon icon-external-link" xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" aria-hidden="true"><path d="M22 14.5v5c0 2.484-2.016 4.5-4.5 4.5h-13A4.502 4.502 0 0 1 0 19.5v-13C0 4.016 2.016 2 4.5 2h11c.281 0 .5.219.5.5v1c0 .281-.219.5-.5.5h-11A2.507 2.507 0 0 0 2 6.5v13C2 20.875 3.125 22 4.5 22h13c1.375 0 2.5-1.125 2.5-2.5v-5c0-.281.219-.5.5-.5h1c.281 0 .5.219.5.5zM28 1v8c0 .547-.453 1-1 1a.99.99 0 0 1-.703-.297l-2.75-2.75L13.36 17.14c-.094.094-.234.156-.359.156s-.266-.063-.359-.156l-1.781-1.781c-.094-.094-.156-.234-.156-.359s.063-.266.156-.359L21.048 4.454l-2.75-2.75a.996.996 0 0 1-.297-.703c0-.547.453-1 1-1h8c.547 0 1 .453 1 1z"></path></svg>
                      </a>
                  </li>
                </ul>
                <ul>
                  <li>
                      <a href="https://developer.mozilla.org/en-US/docs/MDN/Community">Join the MDN community</a>
                  </li>
                  <li>
                      <a target="_blank" rel="noopener" href="https://github.com/mdn/sprints/issues/new?template=issue-template.md&amp;projects=mdn/sprints/2&amp;labels=user-report&amp;title=https%3A//developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">Report a content problem
                          <svg class="icon icon-external-link" xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" aria-hidden="true"><path d="M22 14.5v5c0 2.484-2.016 4.5-4.5 4.5h-13A4.502 4.502 0 0 1 0 19.5v-13C0 4.016 2.016 2 4.5 2h11c.281 0 .5.219.5.5v1c0 .281-.219.5-.5.5h-11A2.507 2.507 0 0 0 2 6.5v13C2 20.875 3.125 22 4.5 22h13c1.375 0 2.5-1.125 2.5-2.5v-5c0-.281.219-.5.5-.5h1c.281 0 .5.219.5.5zM28 1v8c0 .547-.453 1-1 1a.99.99 0 0 1-.703-.297l-2.75-2.75L13.36 17.14c-.094.094-.234.156-.359.156s-.266-.063-.359-.156l-1.781-1.781c-.094-.094-.156-.234-.156-.359s.063-.266.156-.359L21.048 4.454l-2.75-2.75a.996.996 0 0 1-.297-.703c0-.547.453-1 1-1h8c.547 0 1 .453 1 1z"></path></svg>
                      </a>
                  </li>
                  <li>
                      <a target="_blank" rel="noopener" href="https://bugzilla.mozilla.org/form.mdn">Report a bug
                          <svg class="icon icon-external-link" xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 28 28" aria-hidden="true"><path d="M22 14.5v5c0 2.484-2.016 4.5-4.5 4.5h-13A4.502 4.502 0 0 1 0 19.5v-13C0 4.016 2.016 2 4.5 2h11c.281 0 .5.219.5.5v1c0 .281-.219.5-.5.5h-11A2.507 2.507 0 0 0 2 6.5v13C2 20.875 3.125 22 4.5 22h13c1.375 0 2.5-1.125 2.5-2.5v-5c0-.281.219-.5.5-.5h1c.281 0 .5.219.5.5zM28 1v8c0 .547-.453 1-1 1a.99.99 0 0 1-.703-.297l-2.75-2.75L13.36 17.14c-.094.094-.234.156-.359.156s-.266-.063-.359-.156l-1.781-1.781c-.094-.094-.156-.234-.156-.359s.063-.266.156-.359L21.048 4.454l-2.75-2.75a.996.996 0 0 1-.297-.703c0-.547.453-1 1-1h8c.547 0 1 .453 1 1z"></path></svg>
                      </a>
                  </li>
                </ul>
              </div>
          </div>
      </li>
  </ul>
</nav>
        <div id="toolbox" class="toolbox">
  <ul>
    
    <li class="nav-login"><div class="login">
    
        
        <a href="https://developer.mozilla.org/users/github/login/?next=%2Fen-US%2Fdocs%2FLearn%2FJavaScript%2FClient-side_web_APIs%2FDrawing_graphics" class="login-link js-login-link" data-service="GitHub" rel="nofollow">
            Sign in<svg class="icon icon-github" xmlns="http://www.w3.org/2000/svg" width="24" height="28" viewBox="0 0 24 28" aria-label="GitHub" role="img" focusable="false">
    <title>Github</title>
    <path d="M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-.609.109-.828-.266-.828-.578 0-.391.016-1.687.016-3.297 0-1.125-.375-1.844-.812-2.219 2.672-.297 5.484-1.313 5.484-5.922 0-1.313-.469-2.375-1.234-3.219.125-.313.531-1.531-.125-3.187-1-.313-3.297 1.234-3.297 1.234a11.28 11.28 0 0 0-6 0S6.704 6.656 5.704 6.969c-.656 1.656-.25 2.875-.125 3.187-.766.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-.344.313-.656.844-.766 1.609-.688.313-2.438.844-3.484-1-.656-1.141-1.844-1.234-1.844-1.234-1.172-.016-.078.734-.078.734.781.359 1.328 1.75 1.328 1.75.703 2.141 4.047 1.422 4.047 1.422 0 1 .016 1.937.016 2.234 0 .313-.219.688-.828.578C3.439 23.796.002 19.296.002 13.999c0-6.625 5.375-12 12-12zM4.547 19.234c.031-.063-.016-.141-.109-.187-.094-.031-.172-.016-.203.031-.031.063.016.141.109.187.078.047.172.031.203-.031zm.484.532c.063-.047.047-.156-.031-.25-.078-.078-.187-.109-.25-.047-.063.047-.047.156.031.25.078.078.187.109.25.047zm.469.703c.078-.063.078-.187 0-.297-.063-.109-.187-.156-.266-.094-.078.047-.078.172 0 .281s.203.156.266.109zm.656.656c.063-.063.031-.203-.063-.297-.109-.109-.25-.125-.313-.047-.078.063-.047.203.063.297.109.109.25.125.313.047zm.891.391c.031-.094-.063-.203-.203-.25-.125-.031-.266.016-.297.109s.063.203.203.234c.125.047.266 0 .297-.094zm.984.078c0-.109-.125-.187-.266-.172-.141 0-.25.078-.25.172 0 .109.109.187.266.172.141 0 .25-.078.25-.172zm.906-.156c-.016-.094-.141-.156-.281-.141-.141.031-.234.125-.219.234.016.094.141.156.281.125s.234-.125.219-.219z"></path>
</svg>
        </a>
    
</div></li>
  </ul>
</div>
      </div>
      <form id="nav-main-search" action="/en-US/search" method="get" role="search" class="nav-main-search">
  <div class="search-wrap">
    <label for="main-q" class="offscreen">Search</label>
    <input type="search" id="main-q" name="q" placeholder="Search" data-value="" aria-hidden="true">
    <span class="search-trigger">
        <svg class="icon icon-search" xmlns="http://www.w3.org/2000/svg" width="26" height="28" viewBox="0 0 26 28" aria-hidden="true">
    <path d="M18 13c0-3.859-3.141-7-7-7s-7 3.141-7 7 3.141 7 7 7 7-3.141 7-7zm8 13c0 1.094-.906 2-2 2a1.96 1.96 0 0 1-1.406-.594l-5.359-5.344a10.971 10.971 0 0 1-6.234 1.937c-6.078 0-11-4.922-11-11s4.922-11 11-11 11 4.922 11 11c0 2.219-.672 4.406-1.937 6.234l5.359 5.359c.359.359.578.875.578 1.406z"></path>
</svg>
    </span>
    <button type="submit" class="offscreen">Search</button>
    <button type="button" id="close-header-search" class="close-header-search transparent">
        <span class="offscreen">Close search</span>
        <svg class="icon icon-close" xmlns="http://www.w3.org/2000/svg" width="22" height="28" viewBox="0 0 22 28" aria-hidden="true" role="img"><title></title><path d="M20.281 20.656c0 .391-.156.781-.438 1.062l-2.125 2.125c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438L11 19.249l-4.594 4.594c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438l-2.125-2.125c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062L6.751 15l-4.594-4.594c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062l2.125-2.125c.281-.281.672-.438 1.062-.438s.781.156 1.062.438L11 10.751l4.594-4.594c.281-.281.672-.438 1.062-.438s.781.156 1.062.438l2.125 2.125c.281.281.438.672.438 1.062s-.156.781-.438 1.062L15.249 15l4.594 4.594c.281.281.438.672.438 1.062z"></path></svg>
    </button>
  </div>
</form>
    </header>  

  <!-- Content will go here -->
  <main id="content" role="main">
      
  <!-- heading -->
  <div id="wiki-document-head" class="document-head">
    <div class="center">
      <div class="document-title">
        <h1>Drawing graphics</h1>
      </div>

      <!-- action buttons -->
      <div class="document-actions">
        

  
    
  

  
    
    
        
    
  

  

  <ul class="page-buttons">
      <li>
          <button id="languages-menu" class="transparent" aria-haspopup="true" aria-owns="languages-menu-submenu" aria-expanded="false">
              <svg class="icon icon-language" xmlns="http://www.w3.org/2000/svg" width="24" height="28" viewBox="0 0 24 28" aria-hidden="true">
    <path d="M10.219 16.844c-.031.109-.797-.25-1-.328-.203-.094-1.125-.609-1.359-.766s-1.125-.891-1.234-.938a28.275 28.275 0 0 1-2.094 2.828c-.281.328-1.125 1.391-1.641 1.719-.078.047-.531.094-.594.063.25-.187.969-1.078 1.281-1.437.391-.453 2.25-3.047 2.562-3.641.328-.594 1.312-2.562 1.359-2.75-.156-.016-1.391.406-1.719.516-.313.094-1.172.297-1.234.344-.063.063-.016.25-.047.313s-.313.203-.484.234a1.647 1.647 0 0 1-.734 0c-.203-.047-.391-.25-.438-.328 0 0-.063-.094-.078-.359.187-.063.5-.078.844-.172s1.188-.344 1.641-.5 1.328-.484 1.594-.547c.281-.047.984-.516 1.359-.641s.641-.281.656-.203 0 .422-.016.516c-.016.078-.766 1.547-.875 1.781-.063.125-.5.953-1.203 2.047.25.109.781.328 1 .438.266.125 2.125.906 2.219.938s.266.75.234.875zM7.016 9.25c.047.266-.031.375-.063.438-.156.297-.547.5-.781.594s-.625.187-.938.187c-.141-.016-.422-.063-.766-.406-.187-.203-.328-.75-.266-.688s.516.125.719.078.688-.187.906-.25c.234-.078.703-.203.859-.219.156 0 .281.063.328.266zm10.906 2.016l.984 3.547-2.172-.656zM.609 23.766l10.844-3.625V4.016L.609 7.657v16.109zM20 18.813l1.594.484-2.828-10.266-1.563-.484-3.375 8.375 1.594.484.703-1.719 3.297 1.016zM12.141 3.781l8.953 2.875V.718zM17 24.453l2.469.203-.844 2.5L18 26.125c-1.266.812-2.828 1.437-4.312 1.687-.453.094-.969.187-1.422.187h-1.313c-1.656 0-4.672-.984-5.984-1.937-.094-.078-.125-.141-.125-.25 0-.172.125-.297.281-.297.141 0 .875.453 1.078.547 1.406.703 3.375 1.344 4.953 1.344 1.953 0 3.281-.25 5.063-1.016.516-.234.969-.531 1.453-.797zm7-16.859v16.859c-12.078-3.844-12.094-3.844-12.094-3.844C11.656 20.718.453 24.5.297 24.5a.3.3 0 0 1-.281-.203c0-.016-.016-.031-.016-.047V7.406c.016-.047.031-.125.063-.156.094-.109.219-.141.313-.172.047-.016 1-.328 2.328-.781v-6l8.719 3.094C11.532 3.36 21.251 0 21.392 0c.172 0 .313.125.313.328v6.531z"></path>
</svg>
              <span>Languages</span>
          </button>

        <div class="submenu js-submenu" id="languages-menu-submenu">
          <div class="submenu-column">
            <ul id="translations">
              
                
                
                
                  <li lang="fr"><bdi><a rel="internal" href="https://developer.mozilla.org/fr/docs/Apprendre/JavaScript/Client-side_web_APIs/Drawing_graphics" data-locale="fr" title="French">Français (fr)</a></bdi></li>
                
                  <li lang="ja"><bdi><a rel="internal" href="https://developer.mozilla.org/ja/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" data-locale="ja" title="Japanese">日本語 (ja)</a></bdi></li>
                
                  <li lang="zh-CN"><bdi><a rel="internal" href="https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" data-locale="zh-CN" title="Chinese (Simplified)">中文 (简体) (zh-CN)</a></bdi></li>
                
              

              
                <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics$locales" rel="nofollow" id="translations-add">Add a translation</a></li>
              
            </ul>
          </div>
        </div>
      </li>
      
      <li class="page-buttons-edit">
          <a href="https://developer.mozilla.org/en-US/users/signin?next=/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics%24edit" class="button neutral" id="edit-button" rel="nofollow">
              <svg class="icon icon-pencil" xmlns="http://www.w3.org/2000/svg" width="24" height="28" viewBox="0 0 24 28" aria-hidden="true">
    <path d="M5.672 24l1.422-1.422-3.672-3.672L2 20.328V22h2v2h1.672zm8.172-14.5a.329.329 0 0 0-.344-.344.368.368 0 0 0-.266.109l-8.469 8.469a.366.366 0 0 0-.109.266c0 .203.141.344.344.344a.368.368 0 0 0 .266-.109l8.469-8.469a.366.366 0 0 0 .109-.266zM13 6.5l6.5 6.5-13 13H0v-6.5zM23.672 8c0 .531-.219 1.047-.578 1.406L20.5 12 14 5.5l2.594-2.578c.359-.375.875-.594 1.406-.594s1.047.219 1.422.594l3.672 3.656c.359.375.578.891.578 1.422z"></path>
</svg>
              Edit
          </a>
      </li>
      

        

        <li class="page-buttons-advanced">
            <button id="advanced-menu" class="only-icon" aria-haspopup="true" aria-owns="advanced-menu-submenu" aria-expanded="false">
                <svg class="icon icon-gear" xmlns="http://www.w3.org/2000/svg" width="24" height="28" viewBox="0 0 24 28" aria-hidden="true">
    <path d="M16 14c0-2.203-1.797-4-4-4s-4 1.797-4 4 1.797 4 4 4 4-1.797 4-4zm8-1.703v3.469c0 .234-.187.516-.438.562l-2.891.438a8.86 8.86 0 0 1-.609 1.422c.531.766 1.094 1.453 1.672 2.156.094.109.156.25.156.391s-.047.25-.141.359c-.375.5-2.484 2.797-3.016 2.797a.795.795 0 0 1-.406-.141l-2.156-1.687a9.449 9.449 0 0 1-1.422.594c-.109.953-.203 1.969-.453 2.906a.573.573 0 0 1-.562.438h-3.469c-.281 0-.531-.203-.562-.469l-.438-2.875a9.194 9.194 0 0 1-1.406-.578l-2.203 1.672c-.109.094-.25.141-.391.141s-.281-.063-.391-.172c-.828-.75-1.922-1.719-2.578-2.625a.607.607 0 0 1 .016-.718c.531-.719 1.109-1.406 1.641-2.141a8.324 8.324 0 0 1-.641-1.547l-2.859-.422A.57.57 0 0 1 0 15.705v-3.469c0-.234.187-.516.422-.562l2.906-.438c.156-.5.359-.969.609-1.437a37.64 37.64 0 0 0-1.672-2.156c-.094-.109-.156-.234-.156-.375s.063-.25.141-.359c.375-.516 2.484-2.797 3.016-2.797.141 0 .281.063.406.156L7.828 5.94a9.449 9.449 0 0 1 1.422-.594c.109-.953.203-1.969.453-2.906a.573.573 0 0 1 .562-.438h3.469c.281 0 .531.203.562.469l.438 2.875c.484.156.953.344 1.406.578l2.219-1.672c.094-.094.234-.141.375-.141s.281.063.391.156c.828.766 1.922 1.734 2.578 2.656a.534.534 0 0 1 .109.344c0 .141-.047.25-.125.359-.531.719-1.109 1.406-1.641 2.141.266.5.484 1.016.641 1.531l2.859.438a.57.57 0 0 1 .453.562z"></path>
</svg>
                <span>Advanced</span>
            </button>
            <div class="submenu js-submenu" id="advanced-menu-submenu">
                <!-- this page -->
                <div class="submenu-column">
                    <div class="title">Advanced</div>
                    <ul>
                        <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics$history" rel="nofollow">History</a></li>
                        
                        
                        


                

                <li class="page-print"><a href="#" onclick="return window.print();">Print this article</a></li>
            </ul>
          </div>
        </div>
  </li></ul>
      </div>
    </div>
  </div>
  

      <div class="center clear">
      

    <div class="wiki-main-content" id="document-main"><div class="center">
      <!-- start the main content container -->
        <div id="wiki-column-container" class="wiki-left-present">

          <!-- content row with three strips -->
          <div class="column-container column-container-reverse">

            <!-- center: main article content -->
            <div id="wiki-content" class="column-main wiki-column text-content">

              

              
              

              

              
              

              <!-- just the article content -->
              <article id="wikiArticle">
                
                  
                    <div><div class="prevnext">
    <div><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs" style="float: left; width: 20%; text-align: left;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"><i class="icon-arrow-left"></i> Previous </span></a><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs" style="float: left; width: 60%; text-align: center;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"><i class="icon-arrow-up"></i> Overview: Client-side web APIs</span></a><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs" style="width: 20%; float: right; text-align: right;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"> Next  <i class="icon-arrow-right"></i></span></a></div>
    <p>&nbsp;</p>
</div></div>

<p class="summary">The browser contains some very powerful graphics programming tools, from the Scalable Vector Graphics (<a href="https://developer.mozilla.org/en-US/docs/Web/SVG">SVG</a>) language, to APIs for drawing on HTML <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a> elements, (see <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">The Canvas API</a> and <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API">WebGL</a>). This article provides an introduction to canvas, and further resources to allow you to learn more.</p>

<table class="learn-box standard-table">
 <tbody>
  <tr>
   <th scope="row">Prerequisites:</th>
   <td>JavaScript basics (see <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps">first steps</a>, <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks">building blocks</a>, <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects">JavaScript objects</a>), the <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction">basics of Client-side APIs</a></td>
  </tr>
  <tr>
   <th scope="row">Objective:</th>
   <td>To learn the basics of drawing on <code>&lt;canvas&gt;</code> elements using JavaScript.</td>
  </tr>
 </tbody>
</table>

<h2 id="Graphics_on_the_Web">Graphics on the Web<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Graphics_on_the_Web" data-heading-id="Graphics_on_the_Web"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>As we talked about in our HTML <a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding">Multimedia and embedding</a> module, the Web was originally just text, which was very boring, so images were introduced — first via the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img" title="The HTML &lt;img&gt; element embeds an image into the document. It is a replaced element."><code>&lt;img&gt;</code></a> element and later via CSS properties such as <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/background-image" title="The background-image CSS property sets one or more&nbsp;background images on an element."><code>background-image</code></a>, and <a href="https://developer.mozilla.org/en-US/docs/Web/SVG">SVG</a>.</p>

<p>This however was still not enough. While you could use <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS">CSS</a> and <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript">JavaScript</a>
 to animate (and otherwise manipulate) SVG vector images — as they are 
represented by markup — there was still no way to do the same for bitmap
 images, and the tools available were rather limited. The Web still had 
no way to effectively create animations, games, 3D scenes, and other 
requirements commonly handled by lower level languages such as C++ or 
Java.</p>

<p>The situation started to improve when browsers began to support the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a> element and associated <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API">Canvas API</a>
 — Apple invented it in around 2004, and other browsers followed by 
implementing it in the years that followed. As you'll see below, canvas 
provides many useful tools for creating 2D animations, games, data 
visualizations, and other types of app, especially when combined with 
some of the other APIs the web platform provides.</p>

<p>The below example shows a simple 2D canvas-based bouncing balls animation that we originally met in our <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_building_practice">Introducing JavaScript objects</a> module:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/index-finished.htm" width="100%" height="500" frameborder="0"></iframe></p>

<p>Around 2006–2007, Mozilla started work on an experimental 3D canvas implementation. This became <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API">WebGL</a>,
 which gained traction among browser vendors, and was standardized 
around 2009–2010. WebGL allows you to create real 3D graphics inside 
your web browser; the below example shows a simple rotating WebGL cube:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/index_002.htm" width="100%" height="500" frameborder="0"></iframe></p>

<p>This article will focus mainly on 2D canvas, as raw WebGL code is 
very complex. We will however show how to use a WebGL library to create a
 3D scene more easily, and you can find a tutorial covering raw WebGL 
elsewhere — see <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Getting_started_with_WebGL">Getting started with WebGL</a>.</p>

<div class="note">
<p><strong>Note</strong>: Basic canvas functionality is supported well 
across browsers, with the exception of IE 8 and below for 2D canvas, and
 IE 11 and below for WebGL.</p>
</div>

<h2 id="Active_learning_Getting_started_with_a_&lt;canvas&gt;">Active learning: Getting started with a &lt;canvas&gt;<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Active_learning_Getting_started_with_a_%3Ccanvas%3E" data-heading-id="Active_learning_Getting_started_with_a_&lt;canvas&gt;"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>If you want to create a 2D <em>or</em> 3D scene on a web page, you need to start with an HTML <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a>
 element. This element is used to define the area on the page into which
 the image will be drawn. This is as simple as including the element on 
the page:</p>

<pre class="brush: html line-numbers language-html"><code class=" language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>This will create a canvas on the page with a size of 320 by 240 pixels.</p>

<p>Inside the canvas tags, you can put some fallback content, which is shown if the user's browser doesn't support canvas.</p>

<pre class="brush: html line-numbers language-html"><code class=" language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>320<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>240<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Your browser doesn't support canvas. Boo hoo!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>Of course, the above message is really unhelpful! In a real example 
you'd want to relate the fallback content to the canvas content. For 
example, if you were rendering a constantly updating graph of stock 
prices, the fallback content could be a static image of the latest stock
 graph, with alt text saying what the prices are in text.</p>

<h3 id="Creating_and_sizing_our_canvas" class="highlight-spanned"><span class="highlight-span">Creating and sizing our canvas</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Creating_and_sizing_our_canvas" data-heading-id="Creating_and_sizing_our_canvas"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Let's start by creating our own canvas that we draw future experiments on to.</p>

<ol>
 <li>
  <p>First make a local copy of our <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/0_canvas_start.html" rel="noopener">0_canvas_start.html</a> file, and open it in your text editor.</p>
 </li>
 <li>
  <p>Add the following code into it, just below the opening <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body" title="The HTML &lt;body&gt; Element represents the content of an HTML&nbsp;document. There can be only one &lt;body&gt; element in a document."><code>&lt;body&gt;</code></a> tag:</p>

  <pre class="brush: html line-numbers language-html"><code class=" language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myCanvas<span class="token punctuation">"</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Add suitable fallback here.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

  <p>We have added a <code>class</code> to the <code>&lt;canvas&gt;</code> element so it will be easier to select if we have multiple canvases on the page, but we have removed the <code>width</code> and <code>height</code>
 attributes for now (you could add them back in if you wanted, but we 
will set them using JavaScript in a below section). Canvases with no 
explicit width and height set default to 300 by 150 pixels.</p>
 </li>
 <li>
  <p>Now add the following lines of JavaScript inside the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script" title="The HTML &lt;script&gt; element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code."><code>&lt;script&gt;</code></a> element:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> canvas <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.myCanvas'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> width <span class="token operator">=</span> canvas<span class="token punctuation">.</span>width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">;</span>
<span class="token keyword">var</span> height <span class="token operator">=</span> canvas<span class="token punctuation">.</span>height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

  <p>Here we have stored a reference to the canvas in the <code>canvas</code> variable. In the second line we set both a new variable <code>width</code> and the canvas' <code>width</code> property equal to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth" title="Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar."><code>Window.innerWidth</code></a> (which gives us the viewport width).&nbsp;In the third line we set both a new variable <code>height</code> and the canvas' <code>height</code> property equal to <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/innerHeight" title="Height (in pixels) of the browser window viewport including, if rendered, the horizontal scrollbar."><code>Window.innerHeight</code></a> (which gives us the viewport height). So now we have a canvas that fills the entire width and height of the browser window!</p>

  <p>You'll also see that we are chaining variable assignments together 
with multiple equals signs — this is allowed in JavaScript, and it is a 
good technique if you want to make multiple variables all equal to the 
same value. We wanted to make the canvas width and height easily 
accessible in the width/height variables, as they are useful values to 
have available for later (for example, if you want to draw something 
exactly halfway across the width of the canvas).</p>
 </li>
 <li>
  <p>If you save and load your example in a browser now, you'll see 
nothing, which is fine, but you'll also see scrollbars — this is a 
problem for us, which happens because the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body" title="The HTML &lt;body&gt; Element represents the content of an HTML&nbsp;document. There can be only one &lt;body&gt; element in a document."><code>&lt;body&gt;</code></a> element has a <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin" title="The margin CSS property sets the margin area on all four sides of an element. It is a shorthand for margin-top, margin-right, margin-bottom, and margin-left."><code>margin</code></a>
 that, added to our full-window-size canvas, results in a document 
that's wider than the window. To get rid of the scrollbars, we need to 
remove the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/margin" title="The margin CSS property sets the margin area on all four sides of an element. It is a shorthand for margin-top, margin-right, margin-bottom, and margin-left."><code>margin</code></a> and also set <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/overflow" title="The overflow CSS property sets what to do when an element's content is too big to fit in its block formatting context. It is a shorthand for overflow-x and overflow-y."><code>overflow</code></a> to <code>hidden</code>. Add the following into the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head" title="The HTML &lt;head&gt; element contains machine-readable information (metadata) about the document, like its title, scripts, and style sheets."><code>&lt;head&gt;</code></a> of your document:</p>

  <pre class="brush: html line-numbers language-html"><code class=" language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">body</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>The scrollbars should now be gone.</p>
 </li>
</ol>

<div class="note">
<p><strong>Note</strong>: You should generally set the size of the image
 using HTML attributes or DOM properties, as explained above. You could 
use CSS, but the trouble then is that the sizing is done after the 
canvas has rendered, and just like any other image (the rendered canvas 
is just an image), the image could become pixellated/distorted.</p>
</div>

<h3 id="Getting_the_canvas_context_and_final_setup" class="highlight-spanned"><span class="highlight-span">Getting the canvas context and final setup</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Getting_the_canvas_context_and_final_setup" data-heading-id="Getting_the_canvas_context_and_final_setup"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>We need to do one final thing before we can consider our canvas 
template finished. To draw onto the canvas we need to get a special 
reference to the drawing area called a context. This is done using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/getContext" title="The HTMLCanvasElement.getContext() method returns a drawing context on the canvas, or null if the context identifier is not supported."><code>HTMLCanvasElement.getContext()</code></a> method, which for basic usage takes a single string as a parameter representing the type of context you want to retrieve.</p>

<p>In this case we want a 2d canvas, so add the following JavaScript line below the others inside the <code>&lt;script&gt;</code> element:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> ctx <span class="token operator">=</span> canvas<span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token string">'2d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<div class="note">
<p><strong>Note</strong>: other context values you could choose include <code>webgl</code> for WebGL, <code>webgl2</code> for WebGL 2, etc., but we won't need those in this article.</p>
</div>

<p>So that's it — our canvas is now primed and ready for drawing on! The <code>ctx</code> variable now contains a <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D" title="The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a &lt;canvas&gt; element. It is used for drawing shapes, text, images, and other objects."><code>CanvasRenderingContext2D</code></a> object, and all drawing operations on the canvas will involve manipulating this object.</p>

<p>Let's do one last thing before we move on. We'll color the canvas 
background black to give you a first taste of the canvas API. Add the 
following lines at the bottom of your JavaScript:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(0, 0, 0)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>Here we are setting a fill color using the canvas' <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillStyle" title="The CanvasRenderingContext2D.fillStyle property of the Canvas 2D API specifies the color, gradient, or pattern to use inside shapes. The default style is #000 (black)."><code>fillStyle</code></a> property (this takes <a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units#Colors">color values</a> just like CSS properties do), then drawing a rectangle that covers the entire area of the canvas with the<a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect" title="The CanvasRenderingContext2D.fillRect() method of the Canvas 2D API draws a rectangle that is filled according to the current fillStyle."><code>fillRect</code></a>
 method (the first two parameters are the coordinates of the rectangle's
 top left hand corner; the last two are the width and height you want 
the rectangle drawn at — we told you those <code>width</code> and <code>height</code> variables would be useful)!</p>

<p>OK, our template is done and it's time to move on.</p>

<h2 id="2D_canvas_basics">2D canvas basics<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#2D_canvas_basics" data-heading-id="2D_canvas_basics"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>As we said above, all drawing operations are done by manipulating a <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D" title="The CanvasRenderingContext2D interface, part of the Canvas API, provides the 2D rendering context for the drawing surface of a &lt;canvas&gt; element. It is used for drawing shapes, text, images, and other objects."><code>CanvasRenderingContext2D</code></a> object (in our case, <code>ctx</code>).
 Many operations need to be given coordinates to pinpoint exactly where 
to draw something — the top left of the canvas is point (0, 0), the 
horizontal (x) axis runs from left to right, and the vertical (y) axis 
runs from top to bottom.</p>

<p><img alt="" class="internal" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/Canvas_default_grid.png" style="display: block; height: 220px; margin: 0px auto; width: 220px;"></p>

<p>Drawing shapes tends to be done using the rectangle shape primitive, 
or by tracing a line along a certain path and then filling in the shape.
 Below we'll show how to do both.</p>

<h3 id="Simple_rectangles" class="highlight-spanned"><span class="highlight-span">Simple rectangles</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Simple_rectangles" data-heading-id="Simple_rectangles"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Let's start with some simple rectangles.</p>

<ol>
 <li>
  <p>First of all, take a copy of your newly coded canvas template (or make a local copy of <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a> if you didn't follow the above steps).</p>
 </li>
 <li>
  <p>Next, add the following lines to the bottom of your JavaScript:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(255, 0, 0)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

  <p>If you save and refresh, you should see a red rectangle has 
appeared on your canvas. Its top left corner is 50 pixels away from the 
top and left of the canvas edge (as defined by the first two 
parameters), and it is 100 pixels wide and 150 pixels tall (as defined 
by the third and fourth parameters).</p>
 </li>
 <li>
  <p>Let's add another rectangle into the mix — a green one this time. Add the following at the bottom of your JavaScript:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(0, 255, 0)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

  <p>Save and refresh, and you'll see your new rectangle. This raises an
 important point: graphics operations like drawing rectangles, lines, 
and so forth are performed in the order in which they occur. Think of it
 like painting a wall, where each coat of paint overlaps and may even 
hide what's underneath. You can't do anything to change this, so you 
have to think carefully about the order in which you draw the graphics.</p>
 </li>
 <li>
  <p>Note that you can draw semi-transparent graphics by specifying a semi-transparent color, for example by using <code>rgba()</code>. The <code>a</code>
 value defines what's called the "alpha channel, " or the amount of 
transparency the color has. The higher its value, the more it will 
obscure whatever's behind it. Add the following to your code:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgba(255, 0, 255, 0.75)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>Now try drawing some more rectangles of your own; have fun!</p>
 </li>
</ol>

<h3 id="Strokes_and_line_widths" class="highlight-spanned"><span class="highlight-span">Strokes and line widths</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Strokes_and_line_widths" data-heading-id="Strokes_and_line_widths"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>So far we've looked at drawing filled rectangles, but you can also draw rectangles that are just outlines (called <strong>strokes</strong> in graphic design). To set the color you want for your stroke, you use the <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeStyle" title="The CanvasRenderingContext2D.strokeStyle property of the Canvas 2D API specifies the color, gradient, or pattern to use for the strokes (outlines) around shapes. The default is #000 (black)."><code>strokeStyle</code></a> property; drawing a stroke rectangle is done using <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeRect" title="The CanvasRenderingContext2D.strokeRect() method of the Canvas 2D API draws a rectangle that is stroked (outlined) according to the current strokeStyle and other context settings."><code>strokeRect</code></a>.</p>

<ol>
 <li>
  <p>Add the following to the previous example, again below the previous JavaScript lines:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">'rgb(255, 255, 255)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeRect</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>The default width of strokes is 1 pixel; you can adjust the <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineWidth" title="The CanvasRenderingContext2D.lineWidth property of the Canvas 2D API sets the thickness of lines."><code>lineWidth</code></a>
 property value to change this (it takes a number representing the 
number of pixels wide the stroke is). Add the following line in between 
the previous two lines:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 </li>
</ol>

<p>Now you should see that your white outline has become much thicker! 
That's it for now. At this point your example should look like this:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/2_canvas_rectangles.htm" width="100%" height="250" frameborder="0"></iframe></p>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/2_canvas_rectangles.html" rel="noopener">2_canvas_rectangles.html</a>.</p>
</div>

<h3 id="Drawing_paths" class="highlight-spanned"><span class="highlight-span">Drawing paths</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Drawing_paths" data-heading-id="Drawing_paths"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>If you want to draw anything more complex than a rectangle, you need 
to draw a path. Basically, this involves writing code to specify exactly
 what path the pen should move along on your canvas to trace the shape 
you want to draw. Canvas includes functions for drawing straight lines, 
circles, Bézier curves, and more.</p>

<p>Let's start the section off by making a fresh copy of our canvas template (<a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a>), in which to draw the new example.</p>

<p>We'll be using some common methods and properties across all of the below sections:</p>

<ul>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/beginPath" title="The CanvasRenderingContext2D.beginPath() method of the Canvas 2D API starts a new path by emptying the list of sub-paths. Call this method when you want to create a new path."><code>beginPath()</code></a> — start drawing a path at the point where the pen currently is on the canvas. On a new canvas, the pen starts out at (0, 0).</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/moveTo" title="The CanvasRenderingContext2D.moveTo() method of the Canvas 2D API begins a new sub-path at the point specified by the given (x, y) coordinates."><code>moveTo()</code></a>
 — move the pen to a different point on the canvas, without recording or
 tracing the line; the pen simply "jumps" to the new position.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fill" title="The CanvasRenderingContext2D.fill() method of the Canvas 2D API fills the current or given path with the current fillStyle."><code>fill()</code></a> — draw a filled shape by filling in the path you've traced so far.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/stroke" title="The CanvasRenderingContext2D.stroke() method of the Canvas 2D API strokes (outlines) the current or given path with the current stroke style."><code>stroke()</code></a> — draw an outline shape by drawing a stroke along the path you've drawn so far.</li>
 <li>You can also use features like <code>lineWidth</code> and <code>fillStyle</code>/<code>strokeStyle</code> with paths as well as rectangles.</li>
</ul>

<p>A typical simple path drawing option would look something like so:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(255, 0, 0)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// draw your path</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="Drawing_lines">Drawing lines</h4>

<p>Let's draw an equilateral triangle on the canvas.</p>

<ol>
 <li>
  <p>First of all, add the following helper function to the bottom of 
your code. This converts degree values to radians, which is useful 
because whenever you need to provide an angle value in JavaScript, it 
will nearly always be in radians, but humans usually think in degrees.</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token parameter">degrees</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> degrees <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>Next, start off your path by adding the following below your 
previous addition; here we set a color for our triangle, start drawing a
 path, and then move the pen to (50, 50) without drawing anything. 
That's where we'll start drawing our triangle.</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(255, 0, 0)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>Now add the following lines at the bottom of your script:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> triHeight <span class="token operator">=</span> <span class="token number">50</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">tan</span><span class="token punctuation">(</span><span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token operator">+</span>triHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>Let's run through this in order:</p>

  <p>First we draw a line across to (150, 50) — our path now goes 100 pixels to the right along the x axis.</p>

  <p>Second, we work out the height of our equalateral triangle, using a
 bit of simple trigonometry. Basically, we are drawing the triangle 
pointing downwards. The angles in an equalateral triangle are always 60 
degrees; to work out the height we can split it down the middle into two
 right-angled triangles, which will each have angles of 90 degrees, 60 
degrees, and 30 degrees. In terms of the sides:</p>

  <ul>
   <li>The longest side is called the <strong>hypotenuse</strong></li>
   <li>The side next to the 60 degree angle is called the <strong>adjacent</strong> — which we know is 50 pixels, as it is half of the line we just drew.</li>
   <li>The side opposite the 60 degree angle is called the <strong>opposite</strong>, which is the height of the triangle we want to calculate.</li>
  </ul>

  <p><img alt="" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/trigonometry.png" style="display: block; margin: 0 auto;"></p>

  <p>One of the basic trigonometric formulae states that the length of 
the adjacent multiplied by the tangent of the angle is equal to the 
opposite, hence we come up with <code>50 * Math.tan(degToRad(60))</code>. We use our <code>degToRad()</code> function to convert 60 degrees to radians, as <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/tan" title="The Math.tan() function returns the tangent of a number."><code>Math.tan()</code></a> expects an input value in radians.</p>
 </li>
 <li>
  <p>With the height calculated, we draw another line to <code>(100, 50+triHeight)</code>.
 The X coordinate is simple; it must be halfway between the previous two
 X values we set. The Y value on the other hand must be 50 plus the 
triangle height, as we know the top of the triangle is 50 pixels from 
the top of the canvas.</p>
 </li>
 <li>
  <p>The next line draws a line back to the starting point of the triangle.</p>
 </li>
 <li>
  <p>Last of all, we run <code>ctx.fill()</code> to end the path and fill in the shape.</p>
 </li>
</ol>

<h4 id="Drawing_circles">Drawing circles</h4>

<p>Now let's look at how to draw a circle in canvas. This is accomplished using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/arc" title="The CanvasRenderingContext2D.arc() method of the Canvas 2D API adds a circular arc to the current sub-path."><code>arc()</code></a> method, which draws all or part of a circle at a specified point.</p>

<ol>
 <li>
  <p>Let's add an arc to our canvas — add the following to the bottom of your code:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(0, 0, 255)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

  <p><code>arc()</code> takes six parameters. The first two specify the 
position of the arc's center (X and Y, respectively). The third is the 
circle's radius, the fourth and fifth are the start and end angles at 
which to draw the circle (so specifying 0 and 360 degrees gives us a 
full circle), and the sixth parameter defines whether the circle should 
be drawn counterclockwise (anticlockwise) or clockwise (<code>false</code> is clockwise).</p>

  <div class="note">
  <p><strong>Note</strong>: 0 degrees is horizontally to the right.</p>
  </div>
 </li>
 <li>
  <p>Let's try adding another arc:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'yellow'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">45</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>The pattern here is very similar, but with two differences:</p>

  <ul>
   <li>We have set the last parameter of <code>arc()</code> to <code>true</code>,
 meaning that the arc is drawn counterclockwise, which means that even 
though the arc is specified as starting at -45 degrees and ending at 45 
degrees, we draw the arc around the 270 degrees not inside this portion.
 If you were to change <code>true</code> to <code>false</code> and then re-run the code, only the 90 degree slice of the circle would be drawn.</li>
   <li>Before calling <code>fill()</code>, we draw a line to the center 
of the circle. This means that we get the rather nice Pac-Man-style 
cutout rendered. If you removed this line (try it!) then re-ran the 
code, you'd get just an edge of the circle chopped off between the start
 and end point of the arc. This illustrates another important point of 
the canvas — if you try to fill an incomplete path (i.e. one that is not
 closed), the browser fills in a straight line between the start and end
 point and then fills it in.</li>
  </ul>
 </li>
</ol>

<p>That's it for now; your final example should look like this:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/3_canvas_paths.htm" width="100%" height="200" frameborder="0"></iframe></p>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/3_canvas_paths.html" rel="noopener">3_canvas_paths.html</a>.</p>
</div>

<div class="note">
<p><strong>Note</strong>: To find out more about advanced path drawing features such as Bézier curves, check out our <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes">Drawing shapes with canvas</a> tutorial.</p>
</div>

<h3 id="Text" class="highlight-spanned"><span class="highlight-span">Text</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Text" data-heading-id="Text"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Canvas also has features for drawing text. Let's explore these 
briefly. Start by making another fresh copy of our canvas template (<a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a>) in which to draw the new example.</p>

<p>Text is drawn using two methods:</p>

<ul>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillText" title="The CanvasRenderingContext2D method fillText(), part of the Canvas 2D API, draws a text string at the specified coordinates, filling the string's characters with the current fillStyle. An optional parameter allows specifying a maximum width for the rendered text, which the user agent will achieve by condensing the text or by using a lower font size."><code>fillText()</code></a> — draws filled text.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/strokeText" title="The CanvasRenderingContext2D method strokeText(), part of the Canvas 2D API, strokes — that is, draws the outlines of — the characters of a text string at the specified coordinates. An optional parameter allows specifying a maximum width for the rendered text, which the user agent will achieve by condensing the text or by using a lower font size."><code>strokeText()</code></a> — draws outline (stroke) text.</li>
</ul>

<p>Both of these take three properties in their basic usage: the text 
string to draw and the X and Y coordinates of the top left corner of the
 <strong>text box</strong> (literally, the box surrounding the text you draw).</p>

<p>There are also a number of properties to help control text rendering such as <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font" title="The CanvasRenderingContext2D.font property of the Canvas 2D API specifies the current text style to use when drawing text. This string uses the same syntax as the CSS font specifier."><code>font</code></a>, which lets you specify font family, size, etc. It takes as its value the same syntax as the CSS <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/font" title="The font CSS property is a shorthand for font-style, font-variant, font-weight, font-size, line-height, and font-family. Alternatively, it sets an element's font to a system font."><code>font</code></a> property.</p>

<p>Try adding the following block to the bottom of your JavaScript:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>strokeStyle <span class="token operator">=</span> <span class="token string">'white'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'36px arial'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">strokeText</span><span class="token punctuation">(</span><span class="token string">'Canvas text'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'red'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token string">'48px georgia'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fillText</span><span class="token punctuation">(</span><span class="token string">'Canvas text'</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Here we draw two lines of text, one outline and the other stroke. The final example should look like so:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/4_canvas_text.htm" width="100%" height="180" frameborder="0"></iframe></p>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/4_canvas_text.html" rel="noopener">4_canvas_text.html</a>.</p>
</div>

<p>Have a play and see what you can come up with! You can find more information on the options available for canvas text at <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Drawing_text">Drawing text</a>.</p>

<h3 id="Drawing_images_onto_canvas" class="highlight-spanned"><span class="highlight-span">Drawing images onto canvas</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Drawing_images_onto_canvas" data-heading-id="Drawing_images_onto_canvas"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>It is possible to render external images onto your canvas. These can 
be simple images, frames from videos, or the content of other canvases. 
For the moment we'll just look at the case of using some simple images 
on our canvas.</p>

<ol>
 <li>
  <p>As before, make another fresh copy of our canvas template (<a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a>) in which to draw the new example. In this case you'll also need to save a copy of our sample image — <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/firefox.png" rel="noopener">firefox.png</a> — in the same directory.</p>

  <p>Images are drawn onto canvas using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage" title="The CanvasRenderingContext2D.drawImage() method of the Canvas 2D API provides different ways to draw an image onto the canvas."><code>drawImage()</code></a>
 method. The simplest version takes three parameters — a reference to 
the image you want to render, and the X and Y coordinates of the image's
 top left corner.</p>
 </li>
 <li>
  <p>Let's start by getting an image source to embed in our canvas. Add the following lines to the bottom of your JavaScript:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'firefox.png'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

  <p>Here we create a new <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement" title="The HTMLImageElement interface provides special properties and methods for manipulating &lt;img&gt; elements."><code>HTMLImageElement</code></a> object using the&nbsp;<a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/Image" title="The Image() constructor creates a new HTMLImageElement instance. It is functionally equivalent to document.createElement('img')."><code>Image()</code></a> constructor. The returned object is the same type as that which is returned when you grab a reference to an existing <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img" title="The HTML &lt;img&gt; element embeds an image into the document. It is a replaced element."><code>&lt;img&gt;</code></a> element). We then set its <code><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-src">src</a></code> attribute to equal our Firefox logo image. At this point, the browser starts loading the image.</p>
 </li>
 <li>
  <p>We could now try to embed the image using <code>drawImage()</code>, but we need to make sure the image file has been loaded first, otherwise the code will fail. We can achieve this using the <code>onload</code> event handler, which will only be invoked when the image has finished loading. Add the following block below the previous one:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">image<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

  <p>If you load your example in the browser now, you should see the image embeded in the canvas.</p>
 </li>
 <li>
  <p>But there's more! What if we want to display only a part of the 
image, or to resize it? We can do both with the more complex version of <code>drawImage()</code>. Update your <code>ctx.drawImage()</code> line like so:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">185</span><span class="token punctuation">,</span> <span class="token number">175</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

  <ul>
   <li>The first parameter is the image reference, as before.</li>
   <li>Parameters 2 and 3 define the coordinates of the top left corner 
of the area you want to cut out of the loaded image, relative to the 
top-left corner of the image itself. Nothing to the left of the first 
parameter or above the second will be drawn.</li>
   <li>Parameters 4 and 5 define the width and height of the area we want to cut out from the original image we loaded.</li>
   <li>Parameters 6 and 7 define the coordinates at which you want to 
draw the top-left corner of the cut-out portion of the image, relative 
to the top-left corner of the canvas.</li>
   <li>Parameters 8 and 9 define the width and height to draw the 
cut-out area of the image. In this case, we have specified the same 
dimensions as the original slice, but you could resize it by specifying 
different values.</li>
  </ul>
 </li>
</ol>

<p>The final example should look like so:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/5_canvas_images.htm" width="100%" height="260" frameborder="0"></iframe></p>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/5_canvas_images.html" rel="noopener">5_canvas_images.html</a>.</p>
</div>

<h2 id="Loops_and_animations">Loops and animations<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Loops_and_animations" data-heading-id="Loops_and_animations"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>We have so far covered some very basic uses of 2D canvas, but really 
you won't experience the full power of canvas unless you update or 
animate it in some way. After all, canvas does provide scriptable 
images! If you aren't going to change anything, then you might as well 
just use static images and save yourself all the work.</p>

<h3 id="Creating_a_loop" class="highlight-spanned"><span class="highlight-span">Creating a loop</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Creating_a_loop" data-heading-id="Creating_a_loop"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Playing with loops in canvas is rather fun — you can run canvas commands inside a <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for">for</a></code> (or other type of) loop just like any other JavaScript code.</p>

<p>Let's build a simple example.</p>

<ol>
 <li>
  <p>Make another fresh copy of our canvas template (<a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a>) and open it in your code editor.</p>
 </li>
 <li>
  <p>Add the following line to the bottom of your JavaScript. This contains a new method, <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/translate" title="The CanvasRenderingContext2D.translate() method of the Canvas 2D API adds a translation transformation to the current matrix."><code>translate()</code></a>, which moves the origin point of the canvas:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

  <p>This causes the coordinate origin (0, 0) to be moved to the center 
of the canvas, rather than being at the top left corner. This is very 
useful in many situations, like this one, where we want our design to be
 drawn relative to the center of the canvas.</p>
 </li>
 <li>
  <p>Now add the following code to the bottom of the JavaScript:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token parameter">degrees</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> degrees <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span> <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token parameter">min<span class="token punctuation">,</span> max</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> length <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> moveOffset <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>Here we are implementing the same <code>degToRad()</code> function we saw in the triangle example above, a <code>rand()</code> function that returns a random number between given lower and upper bounds, <code>length</code> and <code>moveOffset</code> variables (which we'll find out more about later), and an empty <code>for</code> loop.</p>
 </li>
 <li>
  <p>The idea here is that we'll draw something on the canvas inside the <code>for</code> loop, and iterate on it each time so we can create something interesting. Add the following code inside your <code>for</code> loop:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgba('</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">-</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">', 0, '</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token operator">-</span>length<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">', 0.9)'</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span>moveOffset<span class="token punctuation">,</span> moveOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>moveOffset<span class="token operator">+</span>length<span class="token punctuation">,</span> moveOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> triHeight <span class="token operator">=</span> length<span class="token operator">/</span><span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">tan</span><span class="token punctuation">(</span><span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>moveOffset<span class="token operator">+</span><span class="token punctuation">(</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> moveOffset<span class="token operator">+</span>triHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span>moveOffset<span class="token punctuation">,</span> moveOffset<span class="token punctuation">)</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

length<span class="token operator">--</span><span class="token punctuation">;</span>
moveOffset <span class="token operator">+=</span> <span class="token number">0.7</span><span class="token punctuation">;</span>
ctx<span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span><span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>So on each iteration, we:</p>

  <ul>
   <li>Set the <code>fillStyle</code> to be a shade of slightly transparent purple, which changes each time based on the value of <code>length</code>.
 As you'll see later the length gets smaller each time the loop runs, so
 the effect here is that the color gets brighter with each successive 
triangle drawn.</li>
   <li>Begin the path.</li>
   <li>Move the pen to a coordinate of <code>(moveOffset, moveOffset)</code>; This variable defines how far we want to move each time we draw a new triangle.</li>
   <li>Draw a line to a coordinate of <code>(moveOffset+length, moveOffset)</code>. This draws a line of length <code>length</code> parallel to the X axis.</li>
   <li>Calculate the triangle's height, as before.</li>
   <li>Draw a line to the downward-pointing corner of the triangle, then draw a line back to the start of the triangle.</li>
   <li>Call <code>fill()</code> to fill in the triangle.</li>
   <li>Update the variables that describe the sequence of triangles, so we can be ready to draw the next one. We decrease the <code>length</code> value by 1, so the triangles get smaller each time; increase <code>moveOffset</code> by a small amount so each successive triangle is slightly further away, and use another new function, <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/rotate" title="The CanvasRenderingContext2D.rotate() method of the Canvas 2D API adds a rotation to the transformation matrix."><code>rotate()</code></a>, which allows us to rotate the entire canvas! We rotate it by 5 degrees before drawing the next triangle.</li>
  </ul>
 </li>
</ol>

<p>That's it! The final example should look like so:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/6_canvas_for_loop.htm" width="100%" height="550" frameborder="0"></iframe></p>

<p>At this point, we 'd like to encourage you to play with the example and make it your own! For example:</p>

<ul>
 <li>Draw rectangles or arcs instead of triangles, or even embed images.</li>
 <li>Play with the <code>length</code> and <code>moveOffset</code> values.</li>
 <li>Introduce some random numbers using that <code>rand()</code> function we included above but didn't use.</li>
</ul>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/loops_animation/6_canvas_for_loop.html" rel="noopener">6_canvas_for_loop.html</a>.</p>
</div>

<h3 id="Animations" class="highlight-spanned"><span class="highlight-span">Animations</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Animations" data-heading-id="Animations"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>The loop example we built above was fun, but really you need a 
constant loop that keeps going and going for any serious canvas 
applications (such as games and real time visualizations). If you think 
of your canvas as being like a movie, you really want the display to 
update on each frame to show the updated view, with an ideal refresh 
rate of 60 frames per second so that movement appears nice and smooth to
 the human eye.</p>

<p>There are a few JavaScript functions that will allow you to run 
functions repeatedly, several times a second, the best one for our 
purposes here being <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame" title="The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint."><code>window.requestAnimationFrame()</code></a>.
 It takes one parameter — the name of the function you want to run for 
each frame. The next time the browser is ready to update the screen, 
your function will get called. If that function draws the new update to 
your animation, then calls <code>requestAnimationFrame()</code> again just before the end of the function, the animation loop will continue to run. The loop ends when you stop calling <code>requestAnimationFrame()</code> or if you call <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/cancelAnimationFrame" title="The window.cancelAnimationFrame() method cancels an animation frame request previously scheduled through a call to window.requestAnimationFrame()."><code>window.cancelAnimationFrame()</code></a> after calling <code>requestAnimationFrame()</code> but before the frame is called.</p>

<div class="note">
<p><strong>Note:</strong> It's good practice to call <code>cancelAnimationFrame()</code> from your main code when you're done using the animation, to ensure that no updates are still waiting to be run.</p>
</div>

<p>The browser works out complex details such as making the animation 
run at a consistent speed, and not wasting resources animating things 
that can't be seen.</p>

<p>To see how it works, let's quickly look again at our Bouncing Balls example (<a class="external external-icon" href="https://mdn.github.io/learning-area/javascript/oojs/bouncing-balls/index-finished.html" rel="noopener">see it live</a>, and also see <a class="external external-icon" href="https://github.com/mdn/learning-area/tree/master/javascript/oojs/bouncing-balls" rel="noopener">the source code</a>). The code for the loop that keeps everything moving looks like this:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgba(0, 0, 0, 0.25)'</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> balls<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    balls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    balls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    balls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">collisionDetect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>loop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>We run the <code>loop()</code> function once at the bottom of the code to start the cycle, drawing the first animation frame; the <code>loop()</code> function then takes charge of calling <code>requestAnimationFrame(loop)</code> to run the next frame of the animation, again and again.</p>

<p>Note that on each frame we are completely clearing the canvas and 
redrawing everything. For every ball present we draw it, update its 
position, and check to see if it is colliding with any other balls. Once
 you've drawn a graphic to a canvas, there's no way to manipulate that 
graphic individually like you can with DOM elements. You can't move each
 ball around on the canvas, because once it's drawn, it's part of the 
canvas, and is not an individual accessible element or object. Instead, 
you have to erase and redraw, either by erasing the entire frame and 
redrawing everything, or by having code that knows exactly what parts 
need to be erased and only erases and redraws the minimum area of the 
canvas necessary.</p>

<p>Optimizing animation of graphics is an entire specialty of 
programming, with lots of clever techniques available. Those are beyond 
what we need for our example, though!</p>

<p>In general, the process of doing a canvas animation involves the following steps:</p>

<ol>
 <li>Clear the canvas contents (e.g. with <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/fillRect" title="The CanvasRenderingContext2D.fillRect() method of the Canvas 2D API draws a rectangle that is filled according to the current fillStyle."><code>fillRect()</code></a> or <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/clearRect" title="The CanvasRenderingContext2D.clearRect() method of the Canvas 2D API erases the pixels in a rectangular area by setting them to transparent black."><code>clearRect()</code></a>).</li>
 <li>Save state (if necessary) using <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/save" title="The CanvasRenderingContext2D.save() method of the Canvas 2D API saves the entire state of the canvas by pushing the current state onto a stack."><code>save()</code></a>
 — this is needed when you want to save settings you've updated on the 
canvas before continuing, which is useful for more advanced 
applications.</li>
 <li>Draw the graphics you are animating.</li>
 <li>Restore the settings you saved in step 2, using <a href="https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/restore" title="The CanvasRenderingContext2D.restore() method of the Canvas 2D API restores the most recently saved canvas state by popping the top entry in the drawing state stack. If there is no saved state, this method does nothing."><code>restore()</code></a></li>
 <li>Call <code>requestAnimationFrame()</code> to schedule drawing of the next frame of the animation.</li>
</ol>

<div class="note">
<p><strong>Note</strong>: We won't cover <code>save()</code> and <code>restore()</code> here, but they are explained nicely in our <a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Transformations">Transformations</a> tutorial (and the ones that follow it).</p>
</div>

<h3 id="A_simple_character_animation" class="highlight-spanned"><span class="highlight-span">A simple character animation</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#A_simple_character_animation" data-heading-id="A_simple_character_animation"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Now let's create our own simple animation — we'll get a character 
from a certain rather awesome retro computer game to walk across the 
screen.</p>

<ol>
 <li>
  <p>Make another fresh copy of our canvas template (<a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/getting-started/1_canvas_template.html" rel="noopener">1_canvas_template.html</a>) and open it in your code editor. Make a copy of <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/loops_animation/walk-right.png" rel="noopener">walk-right.png</a> in the same directory.</p>
 </li>
 <li>
  <p>At the bottom of the JavaScript, add the following line to once 
again make the coordinate origin sit in the middle of the canvas:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">translate</span><span class="token punctuation">(</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">,</span> height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 </li>
 <li>
  <p>Now let's create a new <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement" title="The HTMLImageElement interface provides special properties and methods for manipulating &lt;img&gt; elements."><code>HTMLImageElement</code></a> object, set its <code><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-src">src</a></code> to the image we want to load, and add an <code>onload</code> event handler that will cause the <code>draw()</code> function to fire when the image is loaded:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'walk-right.png'</span><span class="token punctuation">;</span>
image<span class="token punctuation">.</span>onload <span class="token operator">=</span> draw<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>Now we'll add some variables to keep track of the position the 
sprite is to be drawn on the screen, and the sprite number we want to 
display.</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> sprite <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> posX <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

  <p>Let's explain the spritesheet image (which we have respectfully borrowed from Mike Thomas' <a class="external external-icon" href="http://atomicrobotdesign.com/blog/htmlcss/create-a-sprite-sheet-walk-cycle-using-using-css-animation/" rel="bookmark noopener" title="Permanent Link to Create a sprite sheet walk cycle using using CSS animation">Create a sprite sheet walk cycle using using CSS animation</a>). The image looks like this:</p>

  <p><img alt="" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/walk-right.png" style="display: block; height: 148px; margin: 0px auto; width: 612px;"></p>

  <p>It contains six sprites that make up the whole walking sequence — 
each one is 102 pixels wide and 148 pixels high. To display each sprite 
cleanly we will have to use <code>drawImage()</code> to chop out a 
single sprite image from the spritesheet and display only that part, 
like we did above with the Firefox logo. The X coordinate of the slice 
will have to be a multiple of 102, and the Y coordinate will always be 
0. The slice size will always be 102 by 148 pixels.</p>
 </li>
 <li>
  <p>Now let's insert an empty <code>draw()</code> function at the bottom of the code, ready for filling up with some code:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
 </li>
 <li>
  <p>the rest of the code in this section goes inside <code>draw()</code>.
 First, add the following line, which clears the canvas to prepare for 
drawing each frame. Notice that we have to specify the top-left corner 
of the rectangle as <code>-(width/2), -(height/2)</code> because we specified the origin position as <code>width/2, height/2</code> earlier on.</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token punctuation">(</span>height<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 </li>
 <li>
  <p>Next, we'll draw our image using drawImage — the 9-parameter version. Add the following:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">ctx<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span>sprite<span class="token operator">*</span><span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">+</span>posX<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">148</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

  <p>As you can see:</p>

  <ul>
   <li>We specify <code>image</code> as the image to embed.</li>
   <li>Parameters 2 and 3 specify the top-left corner of the slice to cut out of the source image, with the X value as <code>sprite</code> multiplied by 102 (where <code>sprite</code> is the sprite number between 0 and 5) and the Y value always 0.</li>
   <li>Parameters 4 and 5 specify the size of the slice to cut out — 102 pixels by 148 pixels.</li>
   <li>Parameters 6 and 7 specify the top-left corner of the box into which to draw the slice on the canvas — the X position is 0 + <code>posX</code>, meaning that we can alter the drawing position by altering the <code>posX</code> value.</li>
   <li>Parameters 8 and 9 specify the size of the image on the canvas. 
We just want to keep its original size, so we specify 102 and 148 as the
 width and height.</li>
  </ul>
 </li>
 <li>
  <p>Now we'll alter the <code>sprite</code> value after each draw — well, after some of them anyway. Add the following block to the bottom of the <code>draw()</code> function:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>posX <span class="token operator">%</span> <span class="token number">13</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>sprite <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sprite <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      sprite<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>We are wrapping the whole block in <code> if (posX % 13 === 0) { ... }</code>. We use the modulo (<code>%</code>) operator (also known as the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Arithmetic_Operators#Remainder_()">remainder operator</a>) to check whether the <code>posX</code> value can be exactly divided by 13 with no remainder. If so, we move on&nbsp; to the next sprite by incrementing <code>sprite</code>
 (wrapping to 0 after we're done with sprite #5). This effectively means
 that we are only updating the sprite on every 13th frame, or roughly 
about 5 frames a second (<code>requestAnimationFrame()</code> calls us 
at up to 60 frames per second if possible). We are deliberately slowing 
down the frame rate because we only have six sprites to work with, and 
if we display one every 60th of a second, our character will move way 
too fast!</p>

  <p>Inside the outer block we use an <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/if...else">if ... else</a></code> statement to check whether the <code>sprite</code>
 value is at 5 (the last sprite, given that the sprite numbers run from 0
 to 5). If we are showing the last sprite already, we reset <code>sprite</code> back to 0; if not we just increment it by 1.</p>
 </li>
 <li>
  <p>Next we need to work out how to change the <code>posX</code> value on each frame — add the following code block just below your last one.&nbsp;</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">if</span><span class="token punctuation">(</span>posX <span class="token operator">&gt;</span> width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newStartPos <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token punctuation">(</span>width<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">102</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    posX <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>newStartPos <span class="token operator">/</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">13</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>posX<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    posX <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>We are using another <code>if ... else</code> statement to see if the value of <code>posX</code> has become greater than <code>width/2</code>,
 which means our character has walked off the right edge of the screen. 
If so, we calculate a position that would put the character just to the 
left of the left side of the screen, and then set <code>posX</code> to 
equal the multiple of 13 closest to that number. This has to be a 
multiple of 13 because otherwise the previous code block won't work, 
since <code>posX</code> would never equal a multiple of 13!</p>

  <p>If our character hasn't yet walked off the edge of the screen, we simply increment <code>posX</code> by 2. This will make him move a little bit to the right the next time we draw him.</p>
 </li>
 <li>
  <p>Finally, we need to make the animation loop by calling <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/requestAnimationFrame" title="The window.requestAnimationFrame() method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint."><code>requestAnimationFrame()</code></a> at the bottom of the <code>draw()</code> function:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js">window<span class="token punctuation">.</span><span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
 </li>
</ol>

<p>That's it! The final example should look like so:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/7_canvas_walking_animation.htm" width="100%" height="260" frameborder="0"></iframe></p>

<div class="note">
<p><strong>Note</strong>: The finished code is available on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/loops_animation/7_canvas_walking_animation.html" rel="noopener">7_canvas_walking_animation.html</a>.</p>
</div>

<h3 id="A_simple_drawing_application" class="highlight-spanned"><span class="highlight-span">A simple drawing application</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#A_simple_drawing_application" data-heading-id="A_simple_drawing_application"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>As a final animation example, we'd like to show you a very simple 
drawing application, to illustrate how the animation loop can be 
combined with user input (like mouse movement, in this case). We won't 
get you to walk through and build this one; we'll just explore the most 
interesting parts of the code.</p>

<p>The example can be found on GitHub as <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/loops_animation/8_canvas_drawing_app.html" rel="noopener">8_canvas_drawing_app.html</a>, and you can play with it live below:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/8_canvas_drawing_app.htm" width="100%" height="600" frameborder="0"></iframe></p>

<p>Let's look at the most interesting parts. First of all, we keep track
 of the mouse's X and Y coordinates and whether it is being clicked or 
not with three variables: <code>curX</code>, <code>curY</code>, and <code>pressed</code>. When the mouse moves, we fire a function set as the <code>onmousemove</code> event handler, which captures the current X and Y values. We also use <code>onmousedown</code> and <code>onmouseup</code> event handlers to change the value of <code>pressed</code> to <code>true</code> when the mouse button is pressed, and back to <code>false</code> again when it is released.</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> curX<span class="token punctuation">;</span>
<span class="token keyword">var</span> curY<span class="token punctuation">;</span>
<span class="token keyword">var</span> pressed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

document<span class="token punctuation">.</span><span class="token function-variable function">onmousemove</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  curX <span class="token operator">=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>Event<span class="token punctuation">)</span> <span class="token operator">?</span> e<span class="token punctuation">.</span>pageX <span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientX <span class="token operator">+</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">?</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token punctuation">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">)</span><span class="token punctuation">;</span>
  curY <span class="token operator">=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>Event<span class="token punctuation">)</span> <span class="token operator">?</span> e<span class="token punctuation">.</span>pageY <span class="token punctuation">:</span> e<span class="token punctuation">.</span>clientY <span class="token operator">+</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">?</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token punctuation">:</span> document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

canvas<span class="token punctuation">.</span><span class="token function-variable function">onmousedown</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pressed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

canvas<span class="token punctuation">.</span><span class="token function-variable function">onmouseup</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  pressed <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>When the "Clear canvas" button is pressed, we run a simple function 
that clears the whole canvas back to black, the same way we've seen 
before:</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js">clearBtn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> <span class="token string">'rgb(0, 0, 0)'</span><span class="token punctuation">;</span>
  ctx<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<p>The drawing loop is pretty simple this time around — if pressed is <code>true</code>,
 we draw a circle with a fill style equal to the value in the color 
picker, and a radius equal to the value set in the range input.</p>

<pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>pressed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    ctx<span class="token punctuation">.</span>fillStyle <span class="token operator">=</span> colorPicker<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">beginPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">arc</span><span class="token punctuation">(</span>curX<span class="token punctuation">,</span> curY<span class="token operator">-</span><span class="token number">85</span><span class="token punctuation">,</span> sizePicker<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">degToRad</span><span class="token punctuation">(</span><span class="token number">360</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    ctx<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<div class="note">
<p><strong>Note</strong>: The <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input" title="The HTML &lt;input&gt; element is used to create interactive controls for web-based forms in order to accept data from the user; a wide variety of types of input data and control widgets are available, depending on the device and user agent."><code>&lt;input&gt;</code></a> <code>range</code> and <code>color</code>
 types are supported fairly well across browsers, with the exception of 
Internet Explorer versions less than 10; also Safari doesn't yet support
 <code>color</code>. If your browser doesn't support these inputs, they 
will fall back to simple text fields and you'll just have to enter valid
 color/number values yourself.</p>
</div>

<h2 id="WebGL">WebGL<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#WebGL" data-heading-id="WebGL"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>It's now time to leave 2D behind, and take a quick look at 3D canvas. 3D canvas content is specified using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API">WebGL API</a>, which is a completely separate API from the 2D canvas API, even though they both render onto <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a> elements.</p>

<p>WebGL is based on the <a href="https://developer.mozilla.org/en-US/docs/Glossary/OpenGL">OpenGL</a> graphics programming language, and allows you to communicate directly with the computer's <a href="https://developer.mozilla.org/en-US/docs/Glossary/GPU">GPU</a>.
 As such, writing raw WebGL is closer to low level languages such as C++
 than regular JavaScript; it is quite complex but incredibly powerful.</p>

<h3 id="Using_a_library" class="highlight-spanned"><span class="highlight-span">Using a library</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Using_a_library" data-heading-id="Using_a_library"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Because of its complexity, most people write 3D graphics code using a third party JavaScript library such as <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js">Three.js</a>, <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas">PlayCanvas</a> or <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js">Babylon.js</a>.
 Most of these work in a similar way, providing functionality to create 
primitive and custom shapes, position viewing cameras and lighting, 
covering surfaces with textures, and more. They handle the WebGL for 
you, letting you work on a higher level.</p>

<p>Yes, using one of these means learning another new API (a third party
 one, in this case), but they are a lot simpler than coding raw WebGL.</p>

<h3 id="Recreating_our_cube" class="highlight-spanned"><span class="highlight-span">Recreating our cube</span><a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Recreating_our_cube" data-heading-id="Recreating_our_cube"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h3>

<p>Let's look at a simple example of how to create something with a WebGL library. We'll choose <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js">Three.js</a>, as it is one of the most popular ones. In this tutorial we'll create the 3D spinning cube we saw earlier.</p>

<ol>
 <li>
  <p>To start with, make a local copy of <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/threejs-cube/index.html" rel="noopener">index.html</a> in a new folder, then save a copy of <a class="external external-icon" href="https://github.com/mdn/learning-area/blob/master/javascript/apis/drawing-graphics/threejs-cube/metal003.png" rel="noopener">metal003.png</a> in the same folder. This is the image we'll use as a surface texture for the cube later on.</p>
 </li>
 <li>
  <p>Next, create a new file called <code>main.js</code>, again in the same folder as before.</p>
 </li>
 <li>
  <p>If you open <code>index.html</code> in your code editor, you'll see that it has two <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script" title="The HTML &lt;script&gt; element is used to embed or reference executable code; this is typically used to embed or refer to JavaScript code."><code>&lt;script&gt;</code></a> elements — the first one attaching <code>three.min.js</code> to the page, and the second one attaching our <code>main.js</code> file to the page. You need to <a class="external external-icon" href="https://raw.githubusercontent.com/mrdoob/three.js/dev/build/three.min.js" rel="noopener">download the three.min.js library</a> and save it in the same directory as before.</p>
 </li>
 <li>
  <p>Now we've got <code>three.js</code> attached to our page, we can start to write JavaScript that makes use of it into <code>main.js</code>. Let's start by creating a new scene — add the following into your main.js file:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> scene <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Scene</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

  <p>The <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Scenes/Scene" rel="noopener">Scene()</a></code> constructor creates a new scene, which represents the whole 3D world we are trying to display.</p>
 </li>
 <li>
  <p>Next, we need a <strong>camera</strong> so we can see the scene. In
 3D imagery terms, the camera represents a viewer's position in the 
world. To create a camera, add the following lines next:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> camera <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>PerspectiveCamera</span><span class="token punctuation">(</span><span class="token number">75</span><span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerWidth <span class="token operator">/</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
camera<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

  <p>The <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Cameras/PerspectiveCamera" rel="noopener">PerspectiveCamera()</a></code> constructor takes four arguments:</p>

  <ul>
   <li>The field of view: How wide the area in front of the camera is that should be visible onscreen, in degrees.</li>
   <li>The aspect ratio: Usually, this is the ratio of the scene's width
 divided by the scene's height. Using another value will distort the 
scene (which might be what you want, but usually isn't).</li>
   <li>The near plane: How close to the camera objects can be before we 
stop rendering them to the screen. Think about how when you move your 
fingertip closer and closer to the space between your eyes, eventually 
you can't see it anymore.</li>
   <li>The far plane: How far away things are from the camera before they are no longer rendered.</li>
  </ul>

  <p>We also set the camera's position to be 5 distance units out of the
 Z axis, which, like in CSS, is out of the screen towards you, the 
viewer.</p>
 </li>
 <li>
  <p>The third vital ingredient is a renderer. This is an object that 
renders a given scene, as viewed through a given camera. We'll create 
one for now using the <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Renderers/WebGLRenderer" rel="noopener">WebGLRenderer()</a></code> constructor, but we'll not use it till later. Add the following lines next:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> renderer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>WebGLRenderer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
renderer<span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">,</span> window<span class="token punctuation">.</span>innerHeight<span class="token punctuation">)</span><span class="token punctuation">;</span>
document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>renderer<span class="token punctuation">.</span>domElement<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

  <p>The first line creates a new renderer, the second line sets the 
size at which the renderer will draw the camera's view, and the third 
line appends the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a> element created by the renderer to the document's <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body" title="The HTML &lt;body&gt; Element represents the content of an HTML&nbsp;document. There can be only one &lt;body&gt; element in a document."><code>&lt;body&gt;</code></a>. Now anything the renderer draws will be displayed in our window.</p>
 </li>
 <li>
  <p>Next, we want to create the cube we'll display on the canvas. Add the following chunk of code at the bottom of your JavaScript:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> cube<span class="token punctuation">;</span>

<span class="token keyword">var</span> loader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>TextureLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

loader<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span> <span class="token string">'metal003.png'</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">texture</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  texture<span class="token punctuation">.</span>wrapS <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>RepeatWrapping<span class="token punctuation">;</span>
  texture<span class="token punctuation">.</span>wrapT <span class="token operator">=</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>RepeatWrapping<span class="token punctuation">;</span>
  texture<span class="token punctuation">.</span>repeat<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> geometry <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>BoxGeometry</span><span class="token punctuation">(</span><span class="token number">2.4</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">,</span> <span class="token number">2.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> material <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>MeshLambertMaterial</span><span class="token punctuation">(</span> <span class="token punctuation">{</span> map<span class="token punctuation">:</span> texture<span class="token punctuation">,</span> shading<span class="token punctuation">:</span> <span class="token constant">THREE</span><span class="token punctuation">.</span>FlatShading <span class="token punctuation">}</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  cube <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>Mesh</span><span class="token punctuation">(</span>geometry<span class="token punctuation">,</span> material<span class="token punctuation">)</span><span class="token punctuation">;</span>
  scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>cube<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>There's a bit more to take in here, so let's go through it in stages:</p>

  <ul>
   <li>We first create a <code>cube</code> global variable so we can access our cube from anywhere in the code.</li>
   <li>Next, we create a new <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Loaders/TextureLoader" rel="noopener">TextureLoader</a></code> object, then call <code>load()</code> on it. <code>load()</code>
 takes two parameters in this case (although it can take more): the 
texture we want to load (our PNG), and a function that will run when the
 texture has loaded.</li>
   <li>Inside this function we use properties of the <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Textures/Texture" rel="noopener">texture</a></code> object to specify that we want a 2 x 2 repeat of the image wrapped around all sides of the cube. Next, we create a new <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Geometries/BoxGeometry" rel="noopener">BoxGeometry</a></code> object and a new <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Materials/MeshLambertMaterial" rel="noopener">MeshLambertMaterial</a></code> object, and bring them together in a <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Objects/Mesh" rel="noopener">Mesh</a></code> to create our cube. An object typically requires a geometry (what shape it is) and a material (what its surface looks like).</li>
   <li>Last of all, we add our cube to the scene, then call our <code>draw()</code> function to start off the animation.</li>
  </ul>
 </li>
 <li>
  <p>Before we get to defining <code>draw()</code>, we'll add a couple of lights to the scene, to liven things up a bit; add the following blocks next:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">var</span> light <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>AmbientLight</span><span class="token punctuation">(</span><span class="token string">'rgb(255, 255, 255)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// soft white light</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>light<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> spotLight <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">THREE<span class="token punctuation">.</span>SpotLight</span><span class="token punctuation">(</span><span class="token string">'rgb(255, 255, 255)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
spotLight<span class="token punctuation">.</span>position<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
spotLight<span class="token punctuation">.</span>castShadow <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
scene<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>spotLight<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>An <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Lights/AmbientLight" rel="noopener">AmbientLight</a></code> object is a kind of soft light that lightens the whole scene a bit, like the sun when you are outside. The <code><a class="external external-icon" href="https://threejs.org/docs/index.html#Reference/Lights/SpotLight" rel="noopener">SpotLight</a></code> object, on the other hand, is a directional beam of light, more like a flashlight/torch (or a spotlight, in fact).</p>
 </li>
 <li>
  <p>Last of all, let's add our <code>draw()</code> function to the bottom of the code:</p>

  <pre class="brush: js line-numbers language-js"><code class=" language-js"><span class="token keyword">function</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>x <span class="token operator">+=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
  cube<span class="token punctuation">.</span>rotation<span class="token punctuation">.</span>y <span class="token operator">+=</span> <span class="token number">0.01</span><span class="token punctuation">;</span>
  renderer<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>scene<span class="token punctuation">,</span> camera<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">requestAnimationFrame</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

  <p>This is fairly intuitive; on each frame, we rotate our cube 
slightly on its X and Y axes, then render the scene as viewed by our 
camera, then finally call <code>requestAnimationFrame()</code> to schedule drawing our next frame.</p>
 </li>
</ol>

<p>Let's have another quick look at what the finished product should look like:</p>

<p><iframe class="live-sample-frame" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/index_002.htm" width="100%" height="500" frameborder="0"></iframe></p>

<p>You can <a class="external external-icon" href="https://github.com/mdn/learning-area/tree/master/javascript/apis/drawing-graphics/threejs-cube" rel="noopener">find the finished code on GitHub</a>.</p>

<div class="note">
<p><strong>Note</strong>: In our GitHub repo you can also find another interesting 3D cube example — <a class="external external-icon" href="https://github.com/mdn/learning-area/tree/master/javascript/apis/drawing-graphics/threejs-video-cube" rel="noopener">Three.js Video Cube</a> (<a class="external external-icon" href="https://mdn.github.io/learning-area/javascript/apis/drawing-graphics/threejs-video-cube/" rel="noopener">see it live also</a>). This uses <a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia" title="The MediaDevices.getUserMedia() method prompts the user for permission to use a media input which produces a MediaStream with tracks containing the requested types of media."><code>getUserMedia()</code></a> to take a video stream from a computer web cam and project it onto the side of the cube as a texture!</p>
</div>

<h2 id="Summary">Summary<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Summary" data-heading-id="Summary"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>At this point, you should have a useful idea of the basics of 
graphics programming using Canvas and WebGL and what you can do with 
these APIs, as well as a good idea of where to go for further 
information. Have fun!</p>

<h2 id="See_also">See also<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#See_also" data-heading-id="See_also"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<p>Here we have covered only the real basics of canvas — there is so much more to learn! The below articles will take you further.</p>

<ul>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial">Canvas tutorial</a>
 — A very detailed tutorial series explaining what you should know about
 2D canvas in much more detail than was covered here. Essential reading.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial">WebGL tutorial</a> — A series that teaches the basics of raw WebGL programming.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Three.js">Building up a basic demo with Three.js</a> — basic Three.js tutorial. We also have equivalent guides for <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_PlayCanvas">PlayCanvas</a> or <a href="https://developer.mozilla.org/en-US/docs/Games/Techniques/3D_on_the_web/Building_up_a_basic_demo_with_Babylon.js">Babylon.js</a>.</li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Games">Game development</a>
 — the landing page for web games development on MDN. There are some 
really useful tutorials and techniques available here related to 2D and 
3D canvas — see the Techniques and Tutorials menu options.</li>
</ul>

<h2 id="Examples">Examples<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#Examples" data-heading-id="Examples"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<ul>
 <li><a class="external external-icon" href="https://github.com/mdn/violent-theremin" rel="noopener">Violent theramin</a> — Uses the Web Audio API to generate sound, and canvas to generate a pretty visualization to go along with it.</li>
 <li><a class="external external-icon" href="https://github.com/mdn/voice-change-o-matic" rel="noopener">Voice change-o-matic</a> — Uses a canvas to visualize real-time audio data from the Web Audio API.</li>
</ul>

<p></p><div class="prevnext">
    <div><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs" style="float: left; width: 20%; text-align: left;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"><i class="icon-arrow-left"></i> Previous </span></a><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs" style="float: left; width: 60%; text-align: center;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"><i class="icon-arrow-up"></i> Overview: Client-side web APIs</span></a><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs" style="width: 20%; float: right; text-align: right;"><span style="display: inline-block; background: #eaeff2; border-radius: 4px; box-shadow: inset 0 -1px #bbbfc2; color: #4d4353; padding: 0.3em 0.8em;"> Next  <i class="icon-arrow-right"></i></span></a></div>
    <p>&nbsp;</p>
</div><p></p>

<p>&nbsp;</p>

<h2 id="In_this_module">In this module<a class="local-anchor" href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics#In_this_module" data-heading-id="In_this_module"><svg class="icon icon-link" version="1.1" width="24" height="28" viewBox="0 0 512 512" aria-hidden="true" focusable="false"><path d="M326.612 185.391c59.747 59.809 58.927 155.698.36 214.59-.11.12-.24.25-.36.37l-67.2 67.2c-59.27 59.27-155.699 59.262-214.96 0-59.27-59.26-59.27-155.7 0-214.96l37.106-37.106c9.84-9.84 26.786-3.3 27.294 10.606.648 17.722 3.826 35.527 9.69 52.721 1.986 5.822.567 12.262-3.783 16.612l-13.087 13.087c-28.026 28.026-28.905 73.66-1.155 101.96 28.024 28.579 74.086 28.749 102.325.51l67.2-67.19c28.191-28.191 28.073-73.757 0-101.83-3.701-3.694-7.429-6.564-10.341-8.569a16.037 16.037 0 0 1-6.947-12.606c-.396-10.567 3.348-21.456 11.698-29.806l21.054-21.055c5.521-5.521 14.182-6.199 20.584-1.731a152.482 152.482 0 0 1 20.522 17.197zM467.547 44.449c-59.261-59.262-155.69-59.27-214.96 0l-67.2 67.2c-.12.12-.25.25-.36.37-58.566 58.892-59.387 154.781.36 214.59a152.454 152.454 0 0 0 20.521 17.196c6.402 4.468 15.064 3.789 20.584-1.731l21.054-21.055c8.35-8.35 12.094-19.239 11.698-29.806a16.037 16.037 0 0 0-6.947-12.606c-2.912-2.005-6.64-4.875-10.341-8.569-28.073-28.073-28.191-73.639 0-101.83l67.2-67.19c28.239-28.239 74.3-28.069 102.325.51 27.75 28.3 26.872 73.934-1.155 101.96l-13.087 13.087c-4.35 4.35-5.769 10.79-3.783 16.612 5.864 17.194 9.042 34.999 9.69 52.721.509 13.906 17.454 20.446 27.294 10.606l37.106-37.106c59.271-59.259 59.271-155.699.001-214.959z"></path></svg><span>Section</span></a></h2>

<ul>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction">Introduction to web APIs</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents">Manipulating documents</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data">Fetching data from the server</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs">Third party APIs</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">Drawing graphics</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs">Video and audio APIs</a></li>
 <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage">Client-side storage</a></li>
</ul>
                  
                
              </article>

              <!-- contributors -->
              <div class="wiki-block contributors">
                <h2 class="offscreen">Document Tags and Contributors</h2>
                
                
  <div class="tag-attach-list contributors-sub">
    <svg class="icon icon-tags" xmlns="http://www.w3.org/2000/svg" width="30" height="28" viewBox="0 0 30 28" aria-hidden="true">
    <path d="M7 7c0-1.109-.891-2-2-2s-2 .891-2 2 .891 2 2 2 2-.891 2-2zm16.672 9c0 .531-.219 1.047-.578 1.406l-7.672 7.688c-.375.359-.891.578-1.422.578s-1.047-.219-1.406-.578L1.422 13.906C.625 13.125 0 11.609 0 10.5V4c0-1.094.906-2 2-2h6.5c1.109 0 2.625.625 3.422 1.422l11.172 11.156c.359.375.578.891.578 1.422zm6 0c0 .531-.219 1.047-.578 1.406l-7.672 7.688a2.08 2.08 0 0 1-1.422.578c-.812 0-1.219-.375-1.75-.922l7.344-7.344c.359-.359.578-.875.578-1.406s-.219-1.047-.578-1.422L14.422 3.422C13.625 2.625 12.11 2 11 2h3.5c1.109 0 2.625.625 3.422 1.422l11.172 11.156c.359.375.578.891.578 1.422z"></path>
</svg>
    <strong>Tags:</strong>&nbsp;
    <ul class="tags tags-small">
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/API" rel="nofollow">API</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/Article" rel="nofollow">Article</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/Beginner" rel="nofollow">Beginner</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/Canvas" rel="nofollow">Canvas</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/CodingScripting" rel="nofollow">CodingScripting</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/Graphics" rel="nofollow">Graphics</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/JavaScript" rel="nofollow">JavaScript</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/Learn" rel="nofollow">Learn</a></li>
      
        <li><a href="https://developer.mozilla.org/en-US/docs/tag/WebGL" rel="nofollow">WebGL</a></li>
      
    </ul>
  </div>


                
                  <div class="contributors-sub">
                    <svg class="icon icon-group" xmlns="http://www.w3.org/2000/svg" width="30" height="28" viewBox="0 0 30 28" aria-hidden="true">
    <path d="M9.266 14a5.532 5.532 0 0 0-4.141 2H3.031C1.468 16 0 15.25 0 13.516 0 12.25-.047 8 1.937 8c.328 0 1.953 1.328 4.062 1.328.719 0 1.406-.125 2.078-.359A7.624 7.624 0 0 0 7.999 10c0 1.422.453 2.828 1.266 4zM26 23.953C26 26.484 24.328 28 21.828 28H8.172C5.672 28 4 26.484 4 23.953 4 20.422 4.828 15 9.406 15c.531 0 2.469 2.172 5.594 2.172S20.063 15 20.594 15C25.172 15 26 20.422 26 23.953zM10 4c0 2.203-1.797 4-4 4S2 6.203 2 4s1.797-4 4-4 4 1.797 4 4zm11 6c0 3.313-2.688 6-6 6s-6-2.688-6-6 2.688-6 6-6 6 2.688 6 6zm9 3.516C30 15.25 28.531 16 26.969 16h-2.094a5.532 5.532 0 0 0-4.141-2A7.066 7.066 0 0 0 22 10a7.6 7.6 0 0 0-.078-1.031A6.258 6.258 0 0 0 24 9.328C26.109 9.328 27.734 8 28.062 8c1.984 0 1.937 4.25 1.937 5.516zM28 4c0 2.203-1.797 4-4 4s-4-1.797-4-4 1.797-4 4-4 4 1.797 4 4z"></path>
</svg>
                    <strong>Contributors to this page:</strong>
                    
        <a href="https://developer.mozilla.org/en-US/profiles/chrisdavidmills" rel="nofollow">chrisdavidmills</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/mdnwebdocs-bot" rel="nofollow">mdnwebdocs-bot</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/ionicpanda" rel="nofollow">ionicpanda</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/2alin" rel="nofollow">2alin</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/shivansh11" rel="nofollow">shivansh11</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/stephaniehobson" rel="nofollow">stephaniehobson</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/TheHumbleGhost" rel="nofollow">TheHumbleGhost</a>, 
    
        <a href="https://developer.mozilla.org/en-US/profiles/Sheppy" rel="nofollow">Sheppy</a>
    
                  </div>
                

                
                  <div class="contributors-sub">
                    <svg class="icon icon-clock" xmlns="http://www.w3.org/2000/svg" width="24" height="28" viewBox="0 0 24 28" aria-hidden="true">
    <path d="M14 8.5v7c0 .281-.219.5-.5.5h-5a.494.494 0 0 1-.5-.5v-1c0-.281.219-.5.5-.5H12V8.5c0-.281.219-.5.5-.5h1c.281 0 .5.219.5.5zm6.5 5.5c0-4.688-3.813-8.5-8.5-8.5S3.5 9.313 3.5 14s3.813 8.5 8.5 8.5 8.5-3.813 8.5-8.5zm3.5 0c0 6.625-5.375 12-12 12S0 20.625 0 14 5.375 2 12 2s12 5.375 12 12z"></path>
</svg>
                    <strong>Last updated by:</strong>
                    <a href="https://developer.mozilla.org/en-US/profiles/chrisdavidmills" rel="nofollow">chrisdavidmills</a>,
                    <time datetime="2019-04-15T02:48:38.522694-07:00">Apr 15, 2019, 2:48:38 AM</time>
                  </div>
                
              </div>
            </div>

            
              <!-- quick links and approvals strip -->
              <div id="wiki-left" class="column-strip wiki-column">

                <!-- crumbs -->
                
  
    <nav class="crumbs" role="navigation">
      <ol typeof="BreadcrumbList" vocab="https://schema.org/" aria-label="breadcrumbs">
        
          <li property="itemListElement" typeof="ListItem" class="crumb">
            <a href="https://developer.mozilla.org/en-US/docs/Learn" property="item" typeof="WebPage">
              <span property="name">Learn web development</span>
            </a>
            <meta property="position" content="1">
          </li>
        
          <li property="itemListElement" typeof="ListItem" class="crumb">
            <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript" property="item" typeof="WebPage">
              <span property="name">Java​Script</span>
            </a>
            <meta property="position" content="2">
          </li>
        
          <li property="itemListElement" typeof="ListItem" class="crumb">
            <a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs" property="item" typeof="WebPage">
              <span property="name">Client-side web APIs</span>
            </a>
            <meta property="position" content="3">
          </li>
        
        <li property="itemListElement" typeof="ListItem" class="crumb">
          <span property="name" aria-current="page">Drawing graphics</span>
        </li>
      </ol>
    </nav>
  

                
                  <!-- quick links -->
                  
  <div class="quick-links" id="quick-links">
    <div class="quick-links-head">Related Topics</div>
    

<ol>
  <li data-default-state="closed"><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web"><strong>Complete beginners start here!</strong></a></li>
  <li class="toggle">
      <details>
          <summary>Getting started with the Web</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web">Getting started with the Web overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Installing_basic_software">Installing basic software</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/What_will_your_website_look_like">What will your website look like?</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Dealing_with_files">Dealing with files</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/HTML_basics">HTML basics</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/CSS_basics">CSS basics</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/JavaScript_basics">JavaScript basics</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/Publishing_your_website">Publishing your website</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Getting_started_with_the_web/How_the_Web_works">How the Web works</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="closed"><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML"><strong>HTML — Structuring the Web</strong></a></li>
  <li class="toggle">
      <details>
          <summary>Introduction to HTML</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML">Introduction to HTML overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started">Getting started with HTML</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML">What's in the head? Metadata in HTML</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/HTML_text_fundamentals">HTML text fundamentals</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Creating_hyperlinks">Creating hyperlinks</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Advanced_text_formatting">Advanced text formatting</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure">Document and website structure</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Debugging_HTML">Debugging HTML</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Marking_up_a_letter">Assessment: Marking up a letter</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Structuring_a_page_of_content">Assessment: Structuring a page of content</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Multimedia and embedding</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding">Multimedia and embedding overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML">Images in HTML</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content">Video and audio content</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Other_embedding_technologies">From object to iframe — other embedding technologies</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Adding_vector_graphics_to_the_Web">Adding vector graphics to the Web</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Responsive_images">Responsive images</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Mozilla_splash_page">Assessment: Mozilla splash page</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>HTML tables</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables">HTML tables overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Basics">HTML table basics</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Advanced">HTML Table advanced features and accessibility</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables/Structuring_planet_data">Assessment: Structuring planet data</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>HTML forms</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms">HTML forms overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Your_first_HTML_form">Your first HTML form</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/How_to_structure_an_HTML_form">How to structure an HTML form</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/The_native_form_widgets">The native form widgets</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Sending_and_retrieving_form_data">Sending form data</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation">Form validation</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/How_to_build_custom_form_widgets">How to build custom form widgets</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Sending_forms_through_JavaScript">Sending forms through JavaScript</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/HTML_forms_in_legacy_browsers">HTML forms in legacy browsers</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Styling_HTML_forms">Styling HTML forms</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Advanced_styling_for_HTML_forms">Advanced styling for HTML forms</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Property_compatibility_table_for_form_widgets">Property compatibility table for form widgets</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="closed"><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS"><strong>CSS — Styling the Web</strong></a></li>
  <li class="toggle">
      <details>
          <summary>Introduction to CSS</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS">Introduction to CSS overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/How_CSS_works">How CSS works</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Syntax">CSS syntax</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Selectors">Selectors introduction</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Simple_selectors">Simple selectors</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Attribute_selectors">Attribute selectors</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Pseudo-classes_and_pseudo-elements">Pseudo-classes and pseudo-elements</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Combinators_and_multiple_selectors">Combinators and multiple selectors</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units">CSS values and units</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Cascade_and_inheritance">Cascade and inheritance</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model">The box model</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Debugging_CSS">Debugging CSS</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Fundamental_CSS_comprehension">Assessment: Fundamental CSS comprehension</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Styling text</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text">Styling text overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals">Fundamental text and font styling</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Styling_lists">Styling lists</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Styling_links">Styling links</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Web_fonts">Web fonts</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Typesetting_a_homepage">Assessment: Typesetting a community school homepage</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Styling boxes</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes">Styling boxes overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Box_model_recap">Box model recap</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Backgrounds">Backgrounds</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Borders">Borders</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Styling_tables">Styling tables</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Advanced_box_effects">Advanced box effects</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/Creating_fancy_letterheaded_paper">Assessment: Creating fancy letterheaded paper</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_boxes/A_cool_looking_box">Assessment: A cool-looking box</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>CSS layout</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout">CSS layout overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Introduction">Introduction</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Normal_Flow">Normal Flow</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Flexbox">Flexbox</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Grids">Grids</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Floats">Floats</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Positioning">Positioning</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Multiple-column_Layout">Multiple-column Layout</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Legacy_Layout_Methods">Legacy Layout Methods</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Supporting_Older_Browsers">Supporting Older Browsers</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/CSS_layout/Fundamental_Layout_Comprehension">Fundamental Layout Comprehension</a></li>
          </ol>
      </details>
  </li>
  <li data-default-state="open"><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript"><strong>JavaScript — Dynamic client-side scripting</strong></a></li>
  <li class="toggle">
      <details>
          <summary>JavaScript first steps</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps">JavaScript first steps overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_is_JavaScript">What is JavaScript?</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/A_first_splash">A first splash into JavaScript</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/What_went_wrong">What went wrong? Troubleshooting JavaScript</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Variables">Storing the information you need — Variables</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Math">Basic math in JavaScript — Numbers and operators</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Strings">Handling text — Strings in JavaScript</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Useful_string_methods">Useful string methods</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Arrays">Arrays</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/First_steps/Silly_story_generator">Assessment: Silly story generator</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>JavaScript building blocks</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks">JavaScript building blocks overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/conditionals">Making decisions in your code — Conditionals</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Looping_code">Looping code</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Functions">Functions — Reusable blocks of code</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Build_your_own_function">Build your own function</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Return_values">Function return values</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events">Introduction to events</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Image_gallery">Assessment: Image gallery</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
      <details>
          <summary>Introducing JavaScript objects</summary>
          <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects">Introducing JavaScript objects overview</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Basics">Object basics</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object-oriented_JS">Object-oriented JavaScript for beginners</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_prototypes">Object prototypes</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Inheritance">Inheritance in JavaScript</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON">Working with JSON data</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Object_building_practise">Object building practise</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/Adding_bouncing_balls_features">Assessment: Adding features to our bouncing balls demo</a></li>
          </ol>
      </details>
  </li>
  <li class="toggle">
    <details open="">
        <summary>Client-side web APIs</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs">Client-side web APIs</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Introduction">Introduction to web APIs</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Manipulating_documents">Manipulating documents</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Fetching_data">Fetching data from the server</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Third_party_APIs">Third party APIs</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">Drawing graphics</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Video_and_audio_APIs">Video and audio APIs</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage">Client-side storage</a></li>
        </ol>
    </details>
  </li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility"><strong>Accessibility — Make the web usable by everyone</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Accessibility guides</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility">Accessibility overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/What_is_accessibility">What is accessibility?</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML">HTML: A good basis for accessibility</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/CSS_and_JavaScript">CSS and JavaScript accessibility best practices</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/WAI-ARIA_basics">WAI-ARIA basics</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/Multimedia">Accessible multimedia</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/Mobile">Mobile accessibility</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Accessibility assessment</summary>
        <ol>
            <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Accessibility/Accessibility_troubleshooting">Assessment: Accessibility troubleshooting</a></li>
        </ol>
    </details>
  </li>
  <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing"><strong>Tools and testing</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Cross browser testing</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing">Cross browser testing overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Introduction">Introduction to cross browser testing</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Testing_strategies">Strategies for carrying out testing</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/HTML_and_CSS">Handling common HTML and CSS problems</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/JavaScript">Handling common JavaScript problems</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Accessibility">Handling common accessibility problems</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Feature_detection">Implementing feature detection</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Automated_testing">Introduction to automated testing</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Tools_and_testing/Cross_browser_testing/Your_own_automation_environment">Setting up your own test automation environment</a></li>
        </ol>
    </details>
  </li>

  <li data-default-state="closed"><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side"><strong>Server-side website programming</strong></a></li>
  <li class="toggle">
    <details>
        <summary>First steps</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps">First steps overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Introduction">Introduction to the server-side</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview">Client-Server overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Web_frameworks">Server-side web frameworks</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Website_security">Website security</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Django web framework (Python)</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django">Django web framework (Python) overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Introduction">Introduction</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/development_environment">Setting up a development environment</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Tutorial_local_library_website">Tutorial: The Local Library website</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/skeleton_website">Tutorial Part 2: Creating a skeleton website</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Models">Tutorial Part 3: Using models</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Admin_site">Tutorial Part 4: Django admin site</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Home_page">Tutorial Part 5: Creating our home page</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Generic_views">Tutorial Part 6: Generic list and detail views</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Sessions">Tutorial Part 7: Sessions framework</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Authentication">Tutorial Part 8: User authentication and permissions</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Forms">Tutorial Part 9: Working with forms</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Testing">Tutorial Part 10: Testing a Django web application</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Deployment">Tutorial Part 11: Deploying Django to production</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/web_application_security">Web application security</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/django_assessment_blog">Assessment: DIY mini blog</a></li>
        </ol>
    </details>
  </li>
  <li class="toggle">
    <details>
        <summary>Express Web Framework (node.js/JavaScript)</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs">Express Web Framework (Node.js/JavaScript) overview</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Introduction">Express/Node introduction</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/development_environment">Setting up a Node (Express) development environment</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Tutorial_local_library_website">Express tutorial: The Local Library website</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/skeleton_website">Express Tutorial Part 2: Creating a skeleton website</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/mongoose">Express Tutorial Part 3: Using a database (with Mongoose)</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/routes">Express Tutorial Part 4: Routes and controllers</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data">Express Tutorial Part 5: Displaying library data</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/forms">Express Tutorial Part 6: Working with forms</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/deployment">Express Tutorial Part 7: Deploying to production</a></li>
        </ol>
    </details>
  </li>
  <li><a href="#"><strong>Further resources</strong></a></li>
  <li class="toggle">
    <details>
        <summary>Common questions</summary>
        <ol>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto">HTML questions</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/CSS/Howto">CSS questions</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Howto">JavaScript questions</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions#How_the_Web_works">How the Web works</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions#Tools_and_setup">Tools and setup</a></li>
          <li><a href="https://developer.mozilla.org/en-US/docs/Learn/Common_questions#Design_and_accessibility">Design and accessibility</a></li>
        </ol>
    </details>
  </li>
  <li data-default-state="closed"><a href="https://developer.mozilla.org/en-US/docs/Learn/How_to_contribute">How to contribute</a></li>
</ol>


  </div>
                

                <!-- approvals -->
                

              </div>
            
          </div>
        </div>
      </div>
    </div> <!-- ends "main-content" -->

    
      <div class="newsletter-box">
        <div class="newsletter">
    <form id="newsletterForm" class="newsletter-form nodisable" name="newsletter-form" action="https://www.mozilla.org/en-US/newsletter/" method="post">
        <div class="newsletter-head">
            <h2 class="newsletter-teaser">Learn the best of web development</h2>
            <p class="newsletter-description">Get the latest and greatest from MDN delivered straight to your inbox.</p>
            
        </div>

        <div class="newsletter-fields">
            <input type="hidden" id="fmt" name="fmt" value="H">
            <input type="hidden" id="newsletterNewslettersInput" name="newsletters" value="app-dev">
            <div id="newsletterErrors" class="newsletter-errors"></div>

            <div id="newsletterEmail" class="form-group newsletter-group-email">
                <label for="newsletterEmailInput" class="form-label offscreen">E-mail</label>
                <input type="email" id="newsletterEmailInput" name="email" class="form-input newsletter-input-email" required="" placeholder="you@example.com" size="30">
            </div>

            <div id="newsletterPrivacy" class="form-group form-group-agree newsletter-group-privacy hidden">
                <input type="checkbox" id="newsletterPrivacyInput" name="privacy" required="">
                <label for="newsletterPrivacyInput">
                I'm okay with Mozilla handling my info as explained in this <a href="https://www.mozilla.org/privacy/">Privacy Policy</a>.
                </label>
            </div>
            <div id="newsletterSubmit" class="newsletter-group-submit">
                <button id="newsletter-submit" type="submit" class="button neutral newsletter-submit">
                    Sign up now<svg class="icon icon-arrow" xmlns="http://www.w3.org/2000/svg" width="23" height="28" viewBox="0 0 23 28" aria-hidden="true">
    <path d="M23 15a2.01 2.01 0 0 1-.578 1.422L12.25 26.594c-.375.359-.891.578-1.422.578s-1.031-.219-1.406-.578L8.25 25.422c-.375-.375-.594-.891-.594-1.422s.219-1.047.594-1.422L12.828 18h-11C.703 18 0 17.062 0 16v-2c0-1.062.703-2 1.828-2h11L8.25 7.406a1.96 1.96 0 0 1 0-2.812l1.172-1.172c.375-.375.875-.594 1.406-.594s1.047.219 1.422.594l10.172 10.172c.375.359.578.875.578 1.406z"></path>
</svg>
                </button>
            </div>
        </div>
    </form>
    <div id="newsletterThanks" class="newsletter-thanks hidden">
        <h2>Thanks! Please check your inbox to confirm your subscription.</h2>
        <p>If you haven’t previously confirmed a subscription to a 
Mozilla-related newsletter you may have to do so. Please check your 
inbox or your spam filter for an email from us.
        </p>
    </div>
    <button id="newsletterHide" type="button" class="only-icon newsletter-hide">
        <span>Hide Newsletter Sign-up</span>
        <svg class="icon icon-close" xmlns="http://www.w3.org/2000/svg" width="22" height="28" viewBox="0 0 22 28" aria-hidden="true" role="img"><title></title><path d="M20.281 20.656c0 .391-.156.781-.438 1.062l-2.125 2.125c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438L11 19.249l-4.594 4.594c-.281.281-.672.438-1.062.438s-.781-.156-1.062-.438l-2.125-2.125c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062L6.751 15l-4.594-4.594c-.281-.281-.438-.672-.438-1.062s.156-.781.438-1.062l2.125-2.125c.281-.281.672-.438 1.062-.438s.781.156 1.062.438L11 10.751l4.594-4.594c.281-.281.672-.438 1.062-.438s.781.156 1.062.438l2.125 2.125c.281.281.438.672.438 1.062s-.156.781-.438 1.062L15.249 15l4.594 4.594c.281.281.438.672.438 1.062z"></path></svg>
    </button>
</div>
      </div>
    

  <menu type="context" id="edit-history-menu">
    <menuitem data-action="/en-US/users/signin?next=/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics%24edit" label="Edit page"></menuitem>
    <menuitem data-action="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics$history" label="View page history"></menuitem>
  </menu>

      </div>
  </main>

  <!-- Footer -->
    <footer id="nav-footer" class="nav-footer">
      <div class="center">
          <a href="https://developer.mozilla.org/en-US/" class="nav-footer-logo">MDN Web Docs</a>
<div class="footer-group footer-group-mdn">
  <h2 class="footer-title">MDN</h2>
  <ul class="footer-list">
    <li><a href="https://developer.mozilla.org/en-US/docs/Web">Web Technologies</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/Learn">Learn Web Development</a></li>
    <li><a href="https://developer.mozilla.org/docs/MDN/About">About MDN</a></li>
    <li><a href="https://developer.mozilla.org/en-US/docs/MDN/Feedback">Feedback</a></li>
    <li class="footer-social">
        <a href="https://twitter.com/mozdevnet">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-twitter" width="26" height="28" viewBox="0 0 26 28" aria-label="Twitter" role="img" focusable="false">
    <title>Twitter</title>
    <path d="M25.312 6.375a10.85 10.85 0 0 1-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 0 1-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 0 1-4.047-4.953v-.063a5.093 5.093 0 0 0 2.281.641 5.044 5.044 0 0 1-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0 0 10.406 5.281 5.708 5.708 0 0 1-.125-1.156 5.045 5.045 0 0 1 5.047-5.047 5.03 5.03 0 0 1 3.687 1.594 9.943 9.943 0 0 0 3.203-1.219 5.032 5.032 0 0 1-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path>
</svg>
        </a>
    </li>
    <li class="footer-social">
        <a href="https://github.com/mdn/">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-github" width="24" height="28" viewBox="0 0 24 28" aria-label="GitHub" role="img" focusable="false">
    <title>GitHub</title>
    <path d="M12 2c6.625 0 12 5.375 12 12 0 5.297-3.437 9.797-8.203 11.391-.609.109-.828-.266-.828-.578 0-.391.016-1.687.016-3.297 0-1.125-.375-1.844-.812-2.219 2.672-.297 5.484-1.313 5.484-5.922 0-1.313-.469-2.375-1.234-3.219.125-.313.531-1.531-.125-3.187-1-.313-3.297 1.234-3.297 1.234a11.28 11.28 0 0 0-6 0S6.704 6.656 5.704 6.969c-.656 1.656-.25 2.875-.125 3.187-.766.844-1.234 1.906-1.234 3.219 0 4.594 2.797 5.625 5.469 5.922-.344.313-.656.844-.766 1.609-.688.313-2.438.844-3.484-1-.656-1.141-1.844-1.234-1.844-1.234-1.172-.016-.078.734-.078.734.781.359 1.328 1.75 1.328 1.75.703 2.141 4.047 1.422 4.047 1.422 0 1 .016 1.937.016 2.234 0 .313-.219.688-.828.578C3.439 23.796.002 19.296.002 13.999c0-6.625 5.375-12 12-12zM4.547 19.234c.031-.063-.016-.141-.109-.187-.094-.031-.172-.016-.203.031-.031.063.016.141.109.187.078.047.172.031.203-.031zm.484.532c.063-.047.047-.156-.031-.25-.078-.078-.187-.109-.25-.047-.063.047-.047.156.031.25.078.078.187.109.25.047zm.469.703c.078-.063.078-.187 0-.297-.063-.109-.187-.156-.266-.094-.078.047-.078.172 0 .281s.203.156.266.109zm.656.656c.063-.063.031-.203-.063-.297-.109-.109-.25-.125-.313-.047-.078.063-.047.203.063.297.109.109.25.125.313.047zm.891.391c.031-.094-.063-.203-.203-.25-.125-.031-.266.016-.297.109s.063.203.203.234c.125.047.266 0 .297-.094zm.984.078c0-.109-.125-.187-.266-.172-.141 0-.25.078-.25.172 0 .109.109.187.266.172.141 0 .25-.078.25-.172zm.906-.156c-.016-.094-.141-.156-.281-.141-.141.031-.234.125-.219.234.016.094.141.156.281.125s.234-.125.219-.219z"></path>
</svg>
        </a>
    </li>
  </ul>
</div>

          <a href="https://mozilla.org/" class="nav-footer-mozilla">Mozilla</a>
<div class="footer-group footer-group-mozilla">
  <h2 class="footer-title">Mozilla</h2>
  <ul class="footer-list">
    <li><a href="https://www.mozilla.org/about/">About</a></li>
    <li><a href="https://www.mozilla.org/contact/">Contact Us</a></li>
    <li><a href="https://www.mozilla.org/firefox/?utm_source=developer.mozilla.org&amp;utm_campaign=footer&amp;utm_medium=referral">Firefox</a></li>
    <li class="footer-social">
        <a href="https://twitter.com/mozilla">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-twitter" width="26" height="28" viewBox="0 0 26 28" aria-label="Twitter" role="img" focusable="false">
    <title>Twitter</title>
    <path d="M25.312 6.375a10.85 10.85 0 0 1-2.531 2.609c.016.219.016.438.016.656 0 6.672-5.078 14.359-14.359 14.359-2.859 0-5.516-.828-7.75-2.266.406.047.797.063 1.219.063 2.359 0 4.531-.797 6.266-2.156a5.056 5.056 0 0 1-4.719-3.5c.313.047.625.078.953.078.453 0 .906-.063 1.328-.172a5.048 5.048 0 0 1-4.047-4.953v-.063a5.093 5.093 0 0 0 2.281.641 5.044 5.044 0 0 1-2.25-4.203c0-.938.25-1.797.688-2.547a14.344 14.344 0 0 0 10.406 5.281 5.708 5.708 0 0 1-.125-1.156 5.045 5.045 0 0 1 5.047-5.047 5.03 5.03 0 0 1 3.687 1.594 9.943 9.943 0 0 0 3.203-1.219 5.032 5.032 0 0 1-2.219 2.781c1.016-.109 2-.391 2.906-.781z"></path>
</svg>
        </a>
    </li>
    <li class="footer-social">
        <a href="https://www.facebook.com/mozilla">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-facebook" width="16" height="28" viewBox="0 0 16 28" aria-label="Facebook" role="img" focusable="false">
    <title>Facebook</title>
    <path d="M14.984.187v4.125h-2.453c-1.922 0-2.281.922-2.281 2.25v2.953h4.578l-.609 4.625H10.25v11.859H5.469V14.14H1.485V9.515h3.984V6.109C5.469 2.156 7.891 0 11.422 0c1.687 0 3.141.125 3.563.187z"></path>
</svg>
        </a>
    </li>
    <li class="footer-social">
        <a href="https://www.instagram.com/mozillagram/">
            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-instagram" width="24" height="28" viewBox="0 0 24 28" aria-label="Instagram" role="img" focusable="false">
    <title>Instagram</title>
    <path d="M16 14c0-2.203-1.797-4-4-4s-4 1.797-4 4 1.797 4 4 4 4-1.797 4-4zm2.156 0c0 3.406-2.75 6.156-6.156 6.156S5.844 17.406 5.844 14 8.594 7.844 12 7.844s6.156 2.75 6.156 6.156zm1.688-6.406c0 .797-.641 1.437-1.437 1.437S16.97 8.39 16.97 7.594s.641-1.437 1.437-1.437 1.437.641 1.437 1.437zM12 4.156c-1.75 0-5.5-.141-7.078.484-.547.219-.953.484-1.375.906s-.688.828-.906 1.375c-.625 1.578-.484 5.328-.484 7.078s-.141 5.5.484 7.078c.219.547.484.953.906 1.375s.828.688 1.375.906c1.578.625 5.328.484 7.078.484s5.5.141 7.078-.484c.547-.219.953-.484 1.375-.906s.688-.828.906-1.375c.625-1.578.484-5.328.484-7.078s.141-5.5-.484-7.078c-.219-.547-.484-.953-.906-1.375s-.828-.688-1.375-.906C17.5 4.015 13.75 4.156 12 4.156zM24 14c0 1.656.016 3.297-.078 4.953-.094 1.922-.531 3.625-1.937 5.031s-3.109 1.844-5.031 1.937c-1.656.094-3.297.078-4.953.078s-3.297.016-4.953-.078c-1.922-.094-3.625-.531-5.031-1.937S.173 20.875.08 18.953C-.014 17.297.002 15.656.002 14s-.016-3.297.078-4.953c.094-1.922.531-3.625 1.937-5.031s3.109-1.844 5.031-1.937c1.656-.094 3.297-.078 4.953-.078s3.297-.016 4.953.078c1.922.094 3.625.531 5.031 1.937s1.844 3.109 1.937 5.031C24.016 10.703 24 12.344 24 14z"></path>
</svg>
        </a>
    </li>
  </ul>
</div>

          
  
    <form class="languages go" method="get" action="/en-US/docs/Web">
      <label for="language">Other languages:</label>
      <select id="language" class="wiki-l10n" name="next" dir="ltr">
        <option title="English (US)" data-locale="en-US" value="/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics" selected="selected">
          English (US) (en-US)
        </option>
        
          <option title="French" data-locale="en-US" value="/fr/docs/Apprendre/JavaScript/Client-side_web_APIs/Drawing_graphics">
            Français (fr)
          </option>
          <option title="Japanese" data-locale="en-US" value="/ja/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">
            日本語 (ja)
          </option>
          <option title="Chinese (Simplified)" data-locale="en-US" value="/zh-CN/docs/Learn/JavaScript/Client-side_web_APIs/Drawing_graphics">
            中文 (简体) (zh-CN)
          </option>
      </select>
      <noscript><button type="submit">Go</button></noscript>
    </form>
  


          
            <ul class="footer-tos">
              <li><a href="https://www.mozilla.org/about/legal/terms/mozilla">Terms</a></li>
              <li><a href="https://www.mozilla.org/privacy/websites/">Privacy</a></li>
              <li><a href="https://www.mozilla.org/privacy/websites/#cookies">Cookies</a></li>
            </ul>

            <div id="license" class="contentinfo">
              <p>© 2005-2019 Mozilla and individual contributors.</p> <p>Content is available under <a href="https://developer.mozilla.org/en-US/docs/MDN/About#Copyrights_and_licenses">these licenses</a>.</p>
            </div>
          
      </div>
    </footer> 

  <!-- site js -->
  
    
    <!--[if lte IE 8]><script type="text/javascript" src="https://developer.mozilla.org/static/build/js/selectivizr.8bb9e662e963.js" charset="utf-8"></script><![endif]-->

    
    <script src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/javascript.js"></script>
    <script type="text/javascript" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/main.js" charset="utf-8"></script>
    <script>
    if (window.mdn && mdn.analytics) mdn.analytics.trackOutboundLinks();
  </script>
    
  
    <script async="" type="text/javascript" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/wiki.js" charset="utf-8"></script>


  

  

  

  
    <script async="" type="text/javascript" src="4.6-Drawing%20graphics%20-%20Learn%20web%20development%20%20%20MDN_files/newsletter.js" charset="utf-8"></script>
  



<div state="voice" class="placeholder-icon" id="tts-placeholder-icon" title="Click to show TTS button" style="background-image: url(&quot;moz-extension://e5590199-f3af-4b42-af79-3874f93ad7d9/data/content_script/icons/voice.png&quot;);"><canvas width="36" height="36" class="loading-circle" id="text-to-speech-loader" style="display: none;"></canvas></div></body></html>